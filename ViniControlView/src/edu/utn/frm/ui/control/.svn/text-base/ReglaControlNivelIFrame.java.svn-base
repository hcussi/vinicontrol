/*
 * ReglaControlNivelIFrame.java
 *
 * Created on 04/08/2009, 17:09:11
 */
package edu.utn.frm.ui.control;

import edu.utn.frm.action.exception.ReporteException;
import edu.utn.frm.action.reglacontrol.ReglaControlNivelAbm;
import edu.utn.frm.dao.generic.ValidateException;
import edu.utn.frm.entities.regla.ReglaControlNivel;
import edu.utn.frm.ui.IconManager;
import javax.swing.JOptionPane;


import edu.utn.frm.ui.utils.GenericTableModel;
import edu.utn.frm.ui.utils.Utiles;

/**
 *
 * @author Proyecto
 */
public class ReglaControlNivelIFrame extends javax.swing.JInternalFrame {

    private GenericTableModel<ReglaControlNivel> model = new GenericTableModel<ReglaControlNivel>(
            new String[]{"Código", "Descripción","Nivel Máximo de Capacidad","Nivel Mínimo de Azúcar" },
            new String[]{"codigo", "descripcion","nivelMaximoCapacidad","nivelMinimoAzucar" });
    private ReglaControlNivelAbm gestorAbm = new ReglaControlNivelAbm();

    /** Creates new form FincaIFrame */
    public ReglaControlNivelIFrame() {
        initComponents();
        habilitarPanelDatos(false);
        model.setRows(gestorAbm.buscar());
        this.setFrameIcon(IconManager.getInstance().getFrameIcon());
        //sPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(" Giros Comerciales [" + model.getRowCount() + "] "));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        datosDialog = new javax.swing.JDialog();
        datosPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        codigoText = new javax.swing.JTextField();
        nivelMinimoAzucarText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        descripcionText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nivelMaximoLitrosText = new javax.swing.JTextField();
        limpiarDatosEntityButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cerrarButton = new javax.swing.JButton();
        guardarButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        sPanel = new javax.swing.JScrollPane();
        buscarTabla = new javax.swing.JTable();
        salirButton = new javax.swing.JButton();
        buscarCodigoText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        buscarButton = new javax.swing.JButton();
        limpiarBuscadorButton = new javax.swing.JButton();
        nuevoButton = new javax.swing.JButton();
        editarButton = new javax.swing.JButton();
        buscarDescripcionText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        copiarButton = new javax.swing.JButton();
        generarInformeButton = new javax.swing.JButton();

        datosDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        datosDialog.setTitle("Regla  de Control de Nivel");
        datosDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        datosDialog.setLocationByPlatform(true);
        datosDialog.setMinimumSize(new java.awt.Dimension(560, 220));
        datosDialog.setModal(true);
        datosDialog.setName("datosDialog"); // NOI18N
        datosDialog.setResizable(false);
        datosDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                datosDialog_windowClosed(evt);
            }
        });

        datosPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Regla de Control de Nivel"));
        datosPanel1.setName("datosPanel1"); // NOI18N

        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel2.setText("Código:");
        jLabel2.setName("jLabel2"); // NOI18N

        codigoText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        codigoText.setName("txtTPatente"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${entity.codigo}"), codigoText, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        nivelMinimoAzucarText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        nivelMinimoAzucarText.setName("txtTCapacidad"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${entity.detalle}"), nivelMinimoAzucarText, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel6.setText("Nivel Mínimo:");
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setText("Descripción:");
        jLabel7.setName("jLabel7"); // NOI18N

        descripcionText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        descripcionText.setName("txtTMarca"); // NOI18N

        jLabel3.setFont(jLabel3.getFont().deriveFont(jLabel3.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel3.setText("Nivel Máximo:");
        jLabel3.setName("jLabel3"); // NOI18N

        nivelMaximoLitrosText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        nivelMaximoLitrosText.setName("txtTModelo"); // NOI18N

        limpiarDatosEntityButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/limpiar.png"))); // NOI18N
        limpiarDatosEntityButton.setText("Limpiar");
        limpiarDatosEntityButton.setName("limpiarDatosEntityButton"); // NOI18N
        limpiarDatosEntityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarDatosEntityButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Azúcar");
        jLabel8.setName("jLabel8"); // NOI18N

        jLabel9.setText("Litros");
        jLabel9.setName("jLabel9"); // NOI18N

        javax.swing.GroupLayout datosPanel1Layout = new javax.swing.GroupLayout(datosPanel1);
        datosPanel1.setLayout(datosPanel1Layout);
        datosPanel1Layout.setHorizontalGroup(
            datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nivelMaximoLitrosText)
                    .addComponent(codigoText, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                    .addComponent(nivelMinimoAzucarText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datosPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(descripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(limpiarDatosEntityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        datosPanel1Layout.setVerticalGroup(
            datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(codigoText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7)
                    .addComponent(descripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(limpiarDatosEntityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(nivelMaximoLitrosText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nivelMinimoAzucarText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(jLabel8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cerrarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/cerrar.png"))); // NOI18N
        cerrarButton.setText("Cerrar");
        cerrarButton.setName("cerrarButton"); // NOI18N
        cerrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarButtonActionPerformed(evt);
            }
        });

        guardarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/guardar.png"))); // NOI18N
        guardarButton.setText("Guardar");
        guardarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        guardarButton.setName("guardarButton"); // NOI18N
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar(evt);
            }
        });

        eliminarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/eliminar.png"))); // NOI18N
        eliminarButton.setText("Eliminar");
        eliminarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        eliminarButton.setName("eliminarButton"); // NOI18N
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar(evt);
            }
        });

        javax.swing.GroupLayout datosDialogLayout = new javax.swing.GroupLayout(datosDialog.getContentPane());
        datosDialog.getContentPane().setLayout(datosDialogLayout);
        datosDialogLayout.setHorizontalGroup(
            datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(datosPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(datosDialogLayout.createSequentialGroup()
                        .addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(eliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cerrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        datosDialogLayout.setVerticalGroup(
            datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datosPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cerrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setIconifiable(true);
        setTitle("Regla Control de Nivel");

        sPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Reglas de Control de Nivel"));
        sPanel.setName("sPanel"); // NOI18N

        buscarTabla.setAutoCreateRowSorter(true);
        buscarTabla.setModel(model);
        buscarTabla.setName("buscarTable"); // NOI18N
        buscarTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscarTablaMouseClicked(evt);
            }
        });
        sPanel.setViewportView(buscarTabla);

        salirButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/cerrar.png"))); // NOI18N
        salirButton.setText("Cerrar");
        salirButton.setName("salirButton"); // NOI18N
        salirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirButtonActionPerformed(evt);
            }
        });

        buscarCodigoText.setName("buscarCodigoText"); // NOI18N

        jLabel1.setText("Descripción");
        jLabel1.setName("jLabel1"); // NOI18N

        buscarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/buscar.png"))); // NOI18N
        buscarButton.setText("Buscar");
        buscarButton.setName("buscarButton"); // NOI18N
        buscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });

        limpiarBuscadorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/limpiar.png"))); // NOI18N
        limpiarBuscadorButton.setText("Limpiar");
        limpiarBuscadorButton.setName("limpiarBuscarButton"); // NOI18N
        limpiarBuscadorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarBuscadorButtonActionPerformed(evt);
            }
        });

        nuevoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/agregar.png"))); // NOI18N
        nuevoButton.setText("Nuevo");
        nuevoButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        nuevoButton.setName("nuevoButton"); // NOI18N
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevo(evt);
            }
        });

        editarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/editar.png"))); // NOI18N
        editarButton.setText("Editar");
        editarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        editarButton.setName("editarButton"); // NOI18N
        editarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonnuevo(evt);
            }
        });

        buscarDescripcionText.setName("buscarDescripcionText"); // NOI18N

        jLabel5.setText("Código");
        jLabel5.setName("jLabel5"); // NOI18N

        copiarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/copiar.png"))); // NOI18N
        copiarButton.setText("Copiar");
        copiarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        copiarButton.setName("copiarButton"); // NOI18N
        copiarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarButton(evt);
            }
        });

        generarInformeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/informe.png"))); // NOI18N
        generarInformeButton.setText("Generar Informe");
        generarInformeButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        generarInformeButton.setName("generarInformeButton"); // NOI18N
        generarInformeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarInformeButton(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(sPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(nuevoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(editarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(copiarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(generarInformeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 159, Short.MAX_VALUE)
                        .addComponent(salirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buscarCodigoText, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buscarDescripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 116, Short.MAX_VALUE)
                        .addComponent(buscarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(limpiarBuscadorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buscarCodigoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscarDescripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(limpiarBuscadorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buscarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nuevoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(salirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(editarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(copiarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(generarInformeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuevo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevo
        nuevo();
    }//GEN-LAST:event_nuevo

    private void buscarTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarTablaMouseClicked
        if (evt.getClickCount() > 1) {
            editar();
        }
}//GEN-LAST:event_buscarTablaMouseClicked

    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
        dispose();
}//GEN-LAST:event_salirButtonActionPerformed

    private void guardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar
        guardar();
    }//GEN-LAST:event_guardar

    private void eliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar
        eliminar();
    }//GEN-LAST:event_eliminar

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
        gestorAbm.getFilter().setCodigo(buscarCodigoText.getText());
        gestorAbm.getFilter().setDescripcion(buscarDescripcionText.getText());
        model.setRows(gestorAbm.buscar());
    }//GEN-LAST:event_buscarButtonActionPerformed

    private void limpiarBuscadorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarBuscadorButtonActionPerformed
        buscarCodigoText.setText("");
        buscarDescripcionText.setText("");
        gestorAbm.getFilter().clear();
    }//GEN-LAST:event_limpiarBuscadorButtonActionPerformed

    private void limpiarDatosEntityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarDatosEntityButtonActionPerformed
        codigoText.setText("");
        descripcionText.setText("");
        nivelMinimoAzucarText.setText("");
        nivelMaximoLitrosText.setText("");
    }//GEN-LAST:event_limpiarDatosEntityButtonActionPerformed

    private void cerrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarButtonActionPerformed
        cerrar();
}//GEN-LAST:event_cerrarButtonActionPerformed

    private void datosDialog_windowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_datosDialog_windowClosed
        cerrar();
}//GEN-LAST:event_datosDialog_windowClosed

    private void editarButtonnuevo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonnuevo
        editar();
    }//GEN-LAST:event_editarButtonnuevo

    private void copiarButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarButton
        copiar();
}//GEN-LAST:event_copiarButton

    private void generarInformeButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarInformeButton
        try {
            gestorAbm.ejecutarReporte();
        } catch (ReporteException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(),"Error al generar el reporte",JOptionPane.ERROR_MESSAGE);
        }
}//GEN-LAST:event_generarInformeButton

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarButton;
    private javax.swing.JTextField buscarCodigoText;
    private javax.swing.JTextField buscarDescripcionText;
    private javax.swing.JTable buscarTabla;
    private javax.swing.JButton cerrarButton;
    private javax.swing.JTextField codigoText;
    private javax.swing.JButton copiarButton;
    private javax.swing.JDialog datosDialog;
    private javax.swing.JPanel datosPanel1;
    private javax.swing.JTextField descripcionText;
    private javax.swing.JButton editarButton;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JButton generarInformeButton;
    private javax.swing.JButton guardarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton limpiarBuscadorButton;
    private javax.swing.JButton limpiarDatosEntityButton;
    private javax.swing.JTextField nivelMaximoLitrosText;
    private javax.swing.JTextField nivelMinimoAzucarText;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JScrollPane sPanel;
    private javax.swing.JButton salirButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void cerrar() {
        reset();
        showDatosDialog(false);
    }

    private void nuevo() {
        gestorAbm.nuevo();
        bindinDataEntity(servidor);
        habilitarPanelDatos(true);
        eliminarButton.setEnabled(false);
        showDatosDialog(true);
    }

    private void editar() {
        ReglaControlNivel reglaControlNivel = null;

        if (buscarTabla.getSelectedRow() != -1) {
            reglaControlNivel = model.getRow(buscarTabla.getSelectedRow());
            if (reglaControlNivel != null) {
                gestorAbm.setEntity(reglaControlNivel);
                bindinDataEntity(servidor);
                habilitarPanelDatos(true);
                showDatosDialog(true);
            }
        }
        if (reglaControlNivel == null) {
            JOptionPane.showInternalMessageDialog(this, "Debe seleccionar una Regla de Control para editar");
        }
    }

    private void copiar() {
        ReglaControlNivel reglaControlNivel = null;

        if (buscarTabla.getSelectedRow() != -1) {
            reglaControlNivel = model.getRow(buscarTabla.getSelectedRow());
            if (reglaControlNivel != null) {
                gestorAbm.setEntity(reglaControlNivel);
                try {
                    gestorAbm.copiar();
                    reset();
                    JOptionPane.showMessageDialog(this, "Se ha copiado exitosamente","Información",JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        }
        if (reglaControlNivel == null) {
            JOptionPane.showInternalMessageDialog(this, "Debe seleccionar una Regla de Control para copiar");
        }
    }

    private void guardar() {

        try {
            new Double(nivelMinimoAzucarText.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(datosDialog, "El nivel mínimo de azúcar tiene un formato incorrecto.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            new Double(nivelMaximoLitrosText.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(datosDialog, "El nivel máximo de capacidad tiene un formato incorrecto.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
                
        bindinDataEntity(cliente);
        try {
            gestorAbm.valid();
            gestorAbm.guardar();
            reset();
            showDatosDialog(false);
        } catch (ValidateException ex) {
            JOptionPane.showMessageDialog(datosDialog, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(datosDialog, ex.getMessage());
        }
    }

    private void showDatosDialog(boolean show) {
        if (show) {
            Utiles.centrarFormulario(datosDialog);
        }
        datosDialog.setVisible(show);
    }

    private void eliminar() {
        ReglaControlNivel reglaControlNivel = null;

        try {
            if (buscarTabla.getSelectedRow() != -1) {
                reglaControlNivel = model.getRow(buscarTabla.getSelectedRow());
                if (reglaControlNivel != null) {

                    int respuesta = JOptionPane.showConfirmDialog(datosDialog, "Está seguro que desea eliminar la Regla de Control seleccionada?",
                            "Confirmar Eliminación",JOptionPane.OK_CANCEL_OPTION);
                    if( respuesta == JOptionPane.OK_OPTION ){
                        gestorAbm.setEntity(reglaControlNivel);
                        gestorAbm.eliminar();
                        reset();
                        showDatosDialog(false);
                    }
                }
            }
            if (reglaControlNivel == null) {
                JOptionPane.showInternalMessageDialog(this, "Debe seleccionar una Regla de Control para eliminar");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void reset() {
        codigoText.setText("");
        nivelMinimoAzucarText.setText("");
        nivelMaximoLitrosText.setText("");
        descripcionText.setText("");
        setEntity(null);
        habilitarPanelDatos(false);
        model.setRows(gestorAbm.buscar());
    }

    public ReglaControlNivelAbm getGestorAbm() {
        return gestorAbm;
    }

    public void setGestorAbm(ReglaControlNivelAbm gestorAbm) {
        this.gestorAbm = gestorAbm;
    }

    public ReglaControlNivel getEntity() {
        return gestorAbm.getEntity();
    }

    public void setEntity(ReglaControlNivel entity) {
        this.gestorAbm.setEntity(entity);
    }

    private void habilitarPanelDatos(boolean habilitar) {
        codigoText.setEnabled(habilitar);
        nivelMinimoAzucarText.setEnabled(habilitar);
        descripcionText.setEnabled(habilitar);
        nivelMaximoLitrosText.setEnabled(habilitar);
        cerrarButton.setEnabled(habilitar);
        guardarButton.setEnabled(habilitar);
        eliminarButton.setEnabled(habilitar);
        limpiarDatosEntityButton.setEnabled(habilitar);
        nuevoButton.setEnabled(true);
    }
    
    private final int cliente = 0;
    private final int servidor = 1;

    public void bindinDataEntity(int fuente) {
        if (fuente == servidor) {
            codigoText.setText(getEntity().getCodigo());
            nivelMinimoAzucarText.setText(getEntity().getNivelMinimoAzucar().toString());
            nivelMaximoLitrosText.setText(getEntity().getNivelMaximoCapacidad().toString());
            descripcionText.setText(getEntity().getDescripcion());
        } else if (fuente == cliente) {
            getEntity().setCodigo(codigoText.getText());
            getEntity().setDescripcion(descripcionText.getText());
            getEntity().setNivelMaximoCapacidad(new Double( nivelMaximoLitrosText.getText() ) );
            getEntity().setNivelMinimoAzucar(new Double (nivelMinimoAzucarText.getText()));
        }

    }
}