/*
 * ReglaControlRemontajeIFrame.java
 *
 * Created on 10/09/2009, 14:09:11
 */
package edu.utn.frm.ui.control;

import edu.utn.frm.action.exception.ReporteException;
import edu.utn.frm.action.reglacontrol.ReglaControlRemontajeAbm;
import edu.utn.frm.dao.generic.ValidateException;
import edu.utn.frm.entities.regla.ReglaControlRemontaje;
import edu.utn.frm.entities.regla.RemontajeDia;
import edu.utn.frm.entities.regla.MomentoRemontaje;
import edu.utn.frm.entities.utils.DateOperations;
import edu.utn.frm.ui.IconManager;
import edu.utn.frm.ui.utils.GenericTableModel;
import edu.utn.frm.ui.utils.Utiles;
import java.text.ParseException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Proyecto
 */
public class ReglaControlRemontajeIFrame extends javax.swing.JInternalFrame {

    private GenericTableModel<ReglaControlRemontaje> model = new GenericTableModel<ReglaControlRemontaje>(
            new String[]{"C贸digo", "Descripci贸n"},
            new String[]{"codigo", "descripcion"});
    private GenericTableModel<RemontajeDia> modelRemontajeDia = new GenericTableModel<RemontajeDia>(
            new String[]{"Nombre"},
            new String[]{"nombre"});
    private GenericTableModel<MomentoRemontaje> modelMomentoRemontaje = new GenericTableModel<MomentoRemontaje>(
            new String[]{"Hora Inicio", "Hora Fin", "Duraci贸n"},
            new String[]{"horaInicioString", "horaFinString", "duracion"});
    private ReglaControlRemontajeAbm gestorAbm = new ReglaControlRemontajeAbm();
    private MaskFormatter maskDuracion;

    /** Creates new form EmpresaIFrame */
    public ReglaControlRemontajeIFrame() {
        try {
            maskDuracion = new MaskFormatter("##:##:##");
            maskDuracion.setPlaceholderCharacter('_');
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        initComponents();
        model.setRows(gestorAbm.buscar());
        buscarTabla.setModel(model);
        tablaRemontajeDia.setModel(modelRemontajeDia);
        tablaMomentoRemontaje.setModel(modelMomentoRemontaje);
        this.setFrameIcon(IconManager.getInstance().getFrameIcon());
        //sPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(" Giros Comerciales [" + model.getRowCount() + "] "));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        datosDialog = new javax.swing.JDialog();
        datosPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        codigoText = new javax.swing.JTextField();
        limpiarDatosEntityButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        descripcionText = new javax.swing.JTextField();
        sPanel1 = new javax.swing.JScrollPane();
        tablaRemontajeDia = new javax.swing.JTable();
        nuevoReglaRemontajeButton = new javax.swing.JButton();
        editarReglaRemontajeButton = new javax.swing.JButton();
        eliminarReglaRemontajeDiaButton = new javax.swing.JButton();
        guardarButton = new javax.swing.JButton();
        cerrarButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        datosDialogRemontajeDia = new javax.swing.JDialog();
        datosPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        nombreRemontajeDiaText = new javax.swing.JTextField();
        limpiarRemontajeDiaButton = new javax.swing.JButton();
        sPanel2 = new javax.swing.JScrollPane();
        tablaMomentoRemontaje = new javax.swing.JTable();
        nuevoRemontajeDiaButton = new javax.swing.JButton();
        editarRemontajeDiaButton = new javax.swing.JButton();
        eliminarMomentoRemontajeButton = new javax.swing.JButton();
        guardarRemontajeDiaButton = new javax.swing.JButton();
        cerrarRemontajeDiaButton = new javax.swing.JButton();
        datosDialogMomentoRemontaje = new javax.swing.JDialog();
        datosPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        duracionMomentoRemontajeText = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        horaInicioMomentoRemontajeText = new javax.swing.JFormattedTextField( maskDuracion );
        limpiarMomentoRemontajeButton = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        guardarMomentoRemontajeButton = new javax.swing.JButton();
        cerrarMomentoRemontajeButton = new javax.swing.JButton();
        sPanel = new javax.swing.JScrollPane();
        buscarTabla = new javax.swing.JTable();
        salirButton = new javax.swing.JButton();
        buscarCodigoText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        buscarButton = new javax.swing.JButton();
        limpiarBuscadorButton = new javax.swing.JButton();
        nuevoButton = new javax.swing.JButton();
        editarButton = new javax.swing.JButton();
        buscarDescripcionText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        copiarButton = new javax.swing.JButton();
        generarInformeButton = new javax.swing.JButton();

        datosDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        datosDialog.setTitle("Regla de Remontaje");
        datosDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        datosDialog.setLocationByPlatform(true);
        datosDialog.setMinimumSize(new java.awt.Dimension(522, 440));
        datosDialog.setModal(true);
        datosDialog.setName("datosDialog"); // NOI18N
        datosDialog.setResizable(false);
        datosDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                datosDialog_windowClosed(evt);
            }
        });

        datosPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Regla de Remontaje"));
        datosPanel.setName("datosPanel"); // NOI18N

        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel4.setText("Codigo:");
        jLabel4.setName("jLabel4"); // NOI18N

        codigoText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        codigoText.setName("codigoText"); // NOI18N

        limpiarDatosEntityButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/limpiar.png"))); // NOI18N
        limpiarDatosEntityButton.setText("Limpiar");
        limpiarDatosEntityButton.setName("limpiarDatosEntityButton"); // NOI18N
        limpiarDatosEntityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarDatosEntityButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Descripci贸n:");
        jLabel7.setName("jLabel7"); // NOI18N

        descripcionText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        descripcionText.setName("descripcionText"); // NOI18N

        sPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Remontaje Dia"));
        sPanel1.setName("sPanel1"); // NOI18N

        tablaRemontajeDia.setAutoCreateRowSorter(true);
        tablaRemontajeDia.setModel(model);
        tablaRemontajeDia.setName("tablaRemontajeDia"); // NOI18N
        tablaRemontajeDia.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaRemontajeDia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaRemontajeDiaMouseClicked(evt);
            }
        });
        sPanel1.setViewportView(tablaRemontajeDia);

        nuevoReglaRemontajeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/agregar.png"))); // NOI18N
        nuevoReglaRemontajeButton.setText("Nuevo");
        nuevoReglaRemontajeButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        nuevoReglaRemontajeButton.setName("nuevoReglaRemontajeButton"); // NOI18N
        nuevoReglaRemontajeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoReglaRemontajeButtonnuevo(evt);
            }
        });

        editarReglaRemontajeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/editar.png"))); // NOI18N
        editarReglaRemontajeButton.setText("Editar");
        editarReglaRemontajeButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        editarReglaRemontajeButton.setName("editarReglaRemontajeButton"); // NOI18N
        editarReglaRemontajeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarReglaRemontajeButtonnuevo(evt);
            }
        });

        eliminarReglaRemontajeDiaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/eliminar.png"))); // NOI18N
        eliminarReglaRemontajeDiaButton.setText("Eliminar");
        eliminarReglaRemontajeDiaButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        eliminarReglaRemontajeDiaButton.setName("eliminarReglaRemontajeDiaButton"); // NOI18N
        eliminarReglaRemontajeDiaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarReglaRemontajeDiaButtoneliminar(evt);
            }
        });

        javax.swing.GroupLayout datosPanelLayout = new javax.swing.GroupLayout(datosPanel);
        datosPanel.setLayout(datosPanelLayout);
        datosPanelLayout.setHorizontalGroup(
            datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(codigoText, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(descripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(limpiarDatosEntityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(datosPanelLayout.createSequentialGroup()
                .addComponent(nuevoReglaRemontajeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editarReglaRemontajeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(eliminarReglaRemontajeDiaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(sPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );
        datosPanelLayout.setVerticalGroup(
            datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datosPanelLayout.createSequentialGroup()
                        .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codigoText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(descripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addComponent(limpiarDatosEntityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevoReglaRemontajeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editarReglaRemontajeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eliminarReglaRemontajeDiaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        guardarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/guardar.png"))); // NOI18N
        guardarButton.setText("Guardar");
        guardarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        guardarButton.setName("guardarButton"); // NOI18N
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonguardar(evt);
            }
        });

        cerrarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/cerrar.png"))); // NOI18N
        cerrarButton.setText("Cerrar");
        cerrarButton.setName("cerrarButton"); // NOI18N
        cerrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarButtonActionPerformed(evt);
            }
        });

        eliminarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/eliminar.png"))); // NOI18N
        eliminarButton.setText("Eliminar");
        eliminarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        eliminarButton.setName("eliminarButton"); // NOI18N
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar(evt);
            }
        });

        javax.swing.GroupLayout datosDialogLayout = new javax.swing.GroupLayout(datosDialog.getContentPane());
        datosDialog.getContentPane().setLayout(datosDialogLayout);
        datosDialogLayout.setHorizontalGroup(
            datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datosDialogLayout.createSequentialGroup()
                .addGroup(datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(datosPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(datosDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(eliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 222, Short.MAX_VALUE)
                        .addComponent(cerrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        datosDialogLayout.setVerticalGroup(
            datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datosDialogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datosPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cerrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        datosDialogRemontajeDia.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        datosDialogRemontajeDia.setTitle("Remontaje Dia");
        datosDialogRemontajeDia.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        datosDialogRemontajeDia.setLocationByPlatform(true);
        datosDialogRemontajeDia.setMinimumSize(new java.awt.Dimension(522, 450));
        datosDialogRemontajeDia.setModal(true);
        datosDialogRemontajeDia.setName("datosDialogRemontajeDia"); // NOI18N
        datosDialogRemontajeDia.setResizable(false);
        datosDialogRemontajeDia.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                datosDialogRemontajeDia_windowClosed(evt);
            }
        });

        datosPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Remontaje Dia"));
        datosPanel1.setName("datosPanel1"); // NOI18N

        jLabel5.setFont(jLabel5.getFont().deriveFont(jLabel5.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel5.setText("Nombre:");
        jLabel5.setName("jLabel5"); // NOI18N

        nombreRemontajeDiaText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        nombreRemontajeDiaText.setName("nombreRemontajeDiaText"); // NOI18N

        limpiarRemontajeDiaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/limpiar.png"))); // NOI18N
        limpiarRemontajeDiaButton.setText("Limpiar");
        limpiarRemontajeDiaButton.setName("limpiarRemontajeDiaButton"); // NOI18N
        limpiarRemontajeDiaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarRemontajeDiaButtonActionPerformed(evt);
            }
        });

        sPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Momento Remontaje"));
        sPanel2.setName("sPanel2"); // NOI18N

        tablaMomentoRemontaje.setAutoCreateRowSorter(true);
        tablaMomentoRemontaje.setModel(model);
        tablaMomentoRemontaje.setName("tablaMomentoRemontaje"); // NOI18N
        tablaMomentoRemontaje.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaMomentoRemontaje.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMomentoRemontajeMouseClicked(evt);
            }
        });
        sPanel2.setViewportView(tablaMomentoRemontaje);

        nuevoRemontajeDiaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/agregar.png"))); // NOI18N
        nuevoRemontajeDiaButton.setText("Nuevo");
        nuevoRemontajeDiaButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        nuevoRemontajeDiaButton.setName("nuevoRemontajeDiaButton"); // NOI18N
        nuevoRemontajeDiaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoRemontajeDiaButtonnuevo(evt);
            }
        });

        editarRemontajeDiaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/editar.png"))); // NOI18N
        editarRemontajeDiaButton.setText("Editar");
        editarRemontajeDiaButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        editarRemontajeDiaButton.setName("editarRemontajeDiaButton"); // NOI18N
        editarRemontajeDiaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarRemontajeDiaButtonnuevo(evt);
            }
        });

        eliminarMomentoRemontajeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/eliminar.png"))); // NOI18N
        eliminarMomentoRemontajeButton.setText("Eliminar");
        eliminarMomentoRemontajeButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        eliminarMomentoRemontajeButton.setName("eliminarMomentoRemontajeButton"); // NOI18N
        eliminarMomentoRemontajeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarMomentoRemontajeButtoneliminar(evt);
            }
        });

        javax.swing.GroupLayout datosPanel1Layout = new javax.swing.GroupLayout(datosPanel1);
        datosPanel1.setLayout(datosPanel1Layout);
        datosPanel1Layout.setHorizontalGroup(
            datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nombreRemontajeDiaText, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 168, Short.MAX_VALUE)
                .addComponent(limpiarRemontajeDiaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(datosPanel1Layout.createSequentialGroup()
                .addComponent(nuevoRemontajeDiaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(editarRemontajeDiaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(eliminarMomentoRemontajeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addComponent(sPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );
        datosPanel1Layout.setVerticalGroup(
            datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nombreRemontajeDiaText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(limpiarRemontajeDiaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(sPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevoRemontajeDiaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editarRemontajeDiaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eliminarMomentoRemontajeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        guardarRemontajeDiaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/aceptar.png"))); // NOI18N
        guardarRemontajeDiaButton.setText("Aceptar");
        guardarRemontajeDiaButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        guardarRemontajeDiaButton.setName("guardarRemontajeDiaButton"); // NOI18N
        guardarRemontajeDiaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarRemontajeDiaButtonguardar(evt);
            }
        });

        cerrarRemontajeDiaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/cerrar.png"))); // NOI18N
        cerrarRemontajeDiaButton.setText("Cancelar");
        cerrarRemontajeDiaButton.setName("cerrarRemontajeDiaButton"); // NOI18N
        cerrarRemontajeDiaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarRemontajeDiaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout datosDialogRemontajeDiaLayout = new javax.swing.GroupLayout(datosDialogRemontajeDia.getContentPane());
        datosDialogRemontajeDia.getContentPane().setLayout(datosDialogRemontajeDiaLayout);
        datosDialogRemontajeDiaLayout.setHorizontalGroup(
            datosDialogRemontajeDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datosDialogRemontajeDiaLayout.createSequentialGroup()
                .addGroup(datosDialogRemontajeDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(datosPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, datosDialogRemontajeDiaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(guardarRemontajeDiaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 313, Short.MAX_VALUE)
                        .addComponent(cerrarRemontajeDiaButton)))
                .addContainerGap())
        );
        datosDialogRemontajeDiaLayout.setVerticalGroup(
            datosDialogRemontajeDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datosDialogRemontajeDiaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datosPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(datosDialogRemontajeDiaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cerrarRemontajeDiaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardarRemontajeDiaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        datosDialogMomentoRemontaje.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        datosDialogMomentoRemontaje.setTitle("Momento Remontaje");
        datosDialogMomentoRemontaje.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        datosDialogMomentoRemontaje.setLocationByPlatform(true);
        datosDialogMomentoRemontaje.setMinimumSize(new java.awt.Dimension(390, 192));
        datosDialogMomentoRemontaje.setModal(true);
        datosDialogMomentoRemontaje.setName("datosDialogMomentoRemontaje"); // NOI18N
        datosDialogMomentoRemontaje.setResizable(false);
        datosDialogMomentoRemontaje.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                datosDialogMomentoRemontaje_windowClosed(evt);
            }
        });

        datosPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Momento Remontaje"));
        datosPanel2.setName("datosPanel2"); // NOI18N

        jLabel10.setFont(jLabel10.getFont().deriveFont(jLabel10.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel10.setText("Duraci贸n:");
        jLabel10.setName("jLabel10"); // NOI18N

        duracionMomentoRemontajeText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        duracionMomentoRemontajeText.setName("duracionMomentoRemontajeText"); // NOI18N

        jLabel11.setText("Hora de Inicio:");
        jLabel11.setName("jLabel11"); // NOI18N

        horaInicioMomentoRemontajeText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        horaInicioMomentoRemontajeText.setName("horaInicioMomentoRemontajeText"); // NOI18N
        horaInicioMomentoRemontajeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horaInicioMomentoRemontajeTextActionPerformed(evt);
            }
        });

        limpiarMomentoRemontajeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/limpiar.png"))); // NOI18N
        limpiarMomentoRemontajeButton.setText("Limpiar");
        limpiarMomentoRemontajeButton.setName("limpiarMomentoRemontajeButton"); // NOI18N
        limpiarMomentoRemontajeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarMomentoRemontajeButtonActionPerformed(evt);
            }
        });

        jLabel13.setFont(jLabel13.getFont().deriveFont(jLabel13.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel13.setText("Minutos");
        jLabel13.setName("jLabel13"); // NOI18N

        javax.swing.GroupLayout datosPanel2Layout = new javax.swing.GroupLayout(datosPanel2);
        datosPanel2.setLayout(datosPanel2Layout);
        datosPanel2Layout.setHorizontalGroup(
            datosPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosPanel2Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(datosPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(datosPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(horaInicioMomentoRemontajeText, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(duracionMomentoRemontajeText, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel13)
                .addGap(46, 46, 46)
                .addComponent(limpiarMomentoRemontajeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        datosPanel2Layout.setVerticalGroup(
            datosPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(datosPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(duracionMomentoRemontajeText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel13)
                    .addComponent(limpiarMomentoRemontajeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(datosPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(horaInicioMomentoRemontajeText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(14, 14, 14))
        );

        guardarMomentoRemontajeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/aceptar.png"))); // NOI18N
        guardarMomentoRemontajeButton.setText("Aceptar");
        guardarMomentoRemontajeButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        guardarMomentoRemontajeButton.setName("guardarMomentoRemontajeButton"); // NOI18N
        guardarMomentoRemontajeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarMomentoRemontajeButtonguardar(evt);
            }
        });

        cerrarMomentoRemontajeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/cerrar.png"))); // NOI18N
        cerrarMomentoRemontajeButton.setText("Cancelar");
        cerrarMomentoRemontajeButton.setName("cerrarMomentoRemontajeButton"); // NOI18N
        cerrarMomentoRemontajeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarMomentoRemontajeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout datosDialogMomentoRemontajeLayout = new javax.swing.GroupLayout(datosDialogMomentoRemontaje.getContentPane());
        datosDialogMomentoRemontaje.getContentPane().setLayout(datosDialogMomentoRemontajeLayout);
        datosDialogMomentoRemontajeLayout.setHorizontalGroup(
            datosDialogMomentoRemontajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosDialogMomentoRemontajeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datosDialogMomentoRemontajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(datosPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(datosDialogMomentoRemontajeLayout.createSequentialGroup()
                        .addComponent(guardarMomentoRemontajeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cerrarMomentoRemontajeButton)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        datosDialogMomentoRemontajeLayout.setVerticalGroup(
            datosDialogMomentoRemontajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosDialogMomentoRemontajeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(datosPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(datosDialogMomentoRemontajeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardarMomentoRemontajeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cerrarMomentoRemontajeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setIconifiable(true);
        setTitle("Regla de Control de Remontaje");

        sPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Control de Remontajes"));
        sPanel.setName("sPanel"); // NOI18N

        buscarTabla.setAutoCreateRowSorter(true);
        buscarTabla.setModel(model);
        buscarTabla.setName("buscarTable"); // NOI18N
        buscarTabla.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        buscarTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscarTablaMouseClicked(evt);
            }
        });
        sPanel.setViewportView(buscarTabla);

        salirButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/cerrar.png"))); // NOI18N
        salirButton.setText("Cerrar");
        salirButton.setName("salirButton"); // NOI18N
        salirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirButtonActionPerformed(evt);
            }
        });

        buscarCodigoText.setName("buscarCodigoText"); // NOI18N

        jLabel1.setText("C贸digo");
        jLabel1.setName("jLabel1"); // NOI18N

        buscarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/buscar.png"))); // NOI18N
        buscarButton.setText("Buscar");
        buscarButton.setName("buscarButton"); // NOI18N
        buscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });

        limpiarBuscadorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/limpiar.png"))); // NOI18N
        limpiarBuscadorButton.setText("Limpiar");
        limpiarBuscadorButton.setName("limpiarBuscarButton"); // NOI18N
        limpiarBuscadorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarBuscadorButtonActionPerformed(evt);
            }
        });

        nuevoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/agregar.png"))); // NOI18N
        nuevoButton.setText("Nuevo");
        nuevoButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        nuevoButton.setName("nuevoButton"); // NOI18N
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevo(evt);
            }
        });

        editarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/editar.png"))); // NOI18N
        editarButton.setText("Editar");
        editarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        editarButton.setName("editarButton"); // NOI18N
        editarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonnuevo(evt);
            }
        });

        buscarDescripcionText.setName("buscarDescripcionText"); // NOI18N

        jLabel3.setText("Descripci贸n");
        jLabel3.setName("jLabel3"); // NOI18N

        copiarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/copiar.png"))); // NOI18N
        copiarButton.setText("Copiar");
        copiarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        copiarButton.setName("copiarButton"); // NOI18N
        copiarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarButton(evt);
            }
        });

        generarInformeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/informe.png"))); // NOI18N
        generarInformeButton.setText("Generar Informe");
        generarInformeButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        generarInformeButton.setName("generarInformeButton"); // NOI18N
        generarInformeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarInformeButton(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(sPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 556, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(nuevoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(editarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(copiarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(generarInformeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(salirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(buscarCodigoText, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(buscarDescripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                                .addComponent(buscarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(limpiarBuscadorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3))
                            .addComponent(jLabel3))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(limpiarBuscadorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarCodigoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buscarDescripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nuevoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(salirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(copiarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generarInformeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        sPanel.getAccessibleContext().setAccessibleName("Cuenta Mayor"); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuevo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevo
        nuevo();
    }//GEN-LAST:event_nuevo

    private void buscarTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarTablaMouseClicked
        if (evt.getClickCount() > 1) {
            editar();
        }
    }//GEN-LAST:event_buscarTablaMouseClicked

    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
        dispose();
    }//GEN-LAST:event_salirButtonActionPerformed

    private void eliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar
        eliminar();
    }//GEN-LAST:event_eliminar

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
        gestorAbm.getFilter().setCodigo(buscarCodigoText.getText());
        gestorAbm.getFilter().setDescripcion(buscarDescripcionText.getText());
        model.setRows(gestorAbm.buscar());
    }//GEN-LAST:event_buscarButtonActionPerformed

    private void limpiarBuscadorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarBuscadorButtonActionPerformed
        buscarCodigoText.setText("");
        buscarDescripcionText.setText("");
        gestorAbm.getFilter().clear();
    }//GEN-LAST:event_limpiarBuscadorButtonActionPerformed

    private void editarButtonnuevo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonnuevo
        editar();
    }//GEN-LAST:event_editarButtonnuevo

    private void limpiarDatosEntityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarDatosEntityButtonActionPerformed
        limpiarDatosEntity();
    }//GEN-LAST:event_limpiarDatosEntityButtonActionPerformed

    private void guardarButtonguardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonguardar
        guardar();
    }//GEN-LAST:event_guardarButtonguardar

    private void cerrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarButtonActionPerformed
        cerrar();
    }//GEN-LAST:event_cerrarButtonActionPerformed

    private void datosDialog_windowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_datosDialog_windowClosed
        cerrar();
    }//GEN-LAST:event_datosDialog_windowClosed

    private void tablaRemontajeDiaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaRemontajeDiaMouseClicked
        if (evt.getClickCount() > 1) {
            editarReglaRemontajeDia();
        }
    }//GEN-LAST:event_tablaRemontajeDiaMouseClicked

    private void nuevoReglaRemontajeButtonnuevo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoReglaRemontajeButtonnuevo
        nuevoReglaRemontajeDia();
    }//GEN-LAST:event_nuevoReglaRemontajeButtonnuevo

    private void editarReglaRemontajeButtonnuevo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarReglaRemontajeButtonnuevo
        editarReglaRemontajeDia();
    }//GEN-LAST:event_editarReglaRemontajeButtonnuevo

    private void eliminarReglaRemontajeDiaButtoneliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarReglaRemontajeDiaButtoneliminar
        eliminarReglaRemontajeDia();
    }//GEN-LAST:event_eliminarReglaRemontajeDiaButtoneliminar

    private void limpiarRemontajeDiaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarRemontajeDiaButtonActionPerformed
        limpiarDatosRemontajeDia();
    }//GEN-LAST:event_limpiarRemontajeDiaButtonActionPerformed

    private void tablaMomentoRemontajeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMomentoRemontajeMouseClicked
        if (evt.getClickCount() > 1) {
            editarMomentoRemontaje();
        }
    }//GEN-LAST:event_tablaMomentoRemontajeMouseClicked

    private void nuevoRemontajeDiaButtonnuevo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoRemontajeDiaButtonnuevo
        nuevoRemontajeDia();
    }//GEN-LAST:event_nuevoRemontajeDiaButtonnuevo

    private void editarRemontajeDiaButtonnuevo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarRemontajeDiaButtonnuevo
        editarMomentoRemontaje();
    }//GEN-LAST:event_editarRemontajeDiaButtonnuevo

    private void eliminarMomentoRemontajeButtoneliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarMomentoRemontajeButtoneliminar
        eliminarMomentoRemontaje();
    }//GEN-LAST:event_eliminarMomentoRemontajeButtoneliminar

    private void guardarRemontajeDiaButtonguardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarRemontajeDiaButtonguardar
        guardarRemontajeDia();
    }//GEN-LAST:event_guardarRemontajeDiaButtonguardar

    private void cerrarRemontajeDiaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarRemontajeDiaButtonActionPerformed
        cerrarRemontajeDia();
    }//GEN-LAST:event_cerrarRemontajeDiaButtonActionPerformed

    private void datosDialogRemontajeDia_windowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_datosDialogRemontajeDia_windowClosed
        cerrarRemontajeDia();
    }//GEN-LAST:event_datosDialogRemontajeDia_windowClosed

    private void limpiarMomentoRemontajeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarMomentoRemontajeButtonActionPerformed
        limpiarDatosMomentoRemontaje();
    }//GEN-LAST:event_limpiarMomentoRemontajeButtonActionPerformed

    private void guardarMomentoRemontajeButtonguardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarMomentoRemontajeButtonguardar
        guardarMomentoRemontaje();
    }//GEN-LAST:event_guardarMomentoRemontajeButtonguardar

    private void cerrarMomentoRemontajeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarMomentoRemontajeButtonActionPerformed
        cerrarMomentoRemotaje();
    }//GEN-LAST:event_cerrarMomentoRemontajeButtonActionPerformed

    private void datosDialogMomentoRemontaje_windowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_datosDialogMomentoRemontaje_windowClosed
        cerrarMomentoRemotaje();
    }//GEN-LAST:event_datosDialogMomentoRemontaje_windowClosed

    private void copiarButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarButton
        copiar();
    }//GEN-LAST:event_copiarButton

    private void generarInformeButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarInformeButton
        try {
            gestorAbm.ejecutarReporte();
        } catch (ReporteException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al generar el reporte", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_generarInformeButton

    private void horaInicioMomentoRemontajeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horaInicioMomentoRemontajeTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horaInicioMomentoRemontajeTextActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarButton;
    private javax.swing.JTextField buscarCodigoText;
    private javax.swing.JTextField buscarDescripcionText;
    private javax.swing.JTable buscarTabla;
    private javax.swing.JButton cerrarButton;
    private javax.swing.JButton cerrarMomentoRemontajeButton;
    private javax.swing.JButton cerrarRemontajeDiaButton;
    private javax.swing.JTextField codigoText;
    private javax.swing.JButton copiarButton;
    private javax.swing.JDialog datosDialog;
    private javax.swing.JDialog datosDialogMomentoRemontaje;
    private javax.swing.JDialog datosDialogRemontajeDia;
    private javax.swing.JPanel datosPanel;
    private javax.swing.JPanel datosPanel1;
    private javax.swing.JPanel datosPanel2;
    private javax.swing.JTextField descripcionText;
    private javax.swing.JTextField duracionMomentoRemontajeText;
    private javax.swing.JButton editarButton;
    private javax.swing.JButton editarReglaRemontajeButton;
    private javax.swing.JButton editarRemontajeDiaButton;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JButton eliminarMomentoRemontajeButton;
    private javax.swing.JButton eliminarReglaRemontajeDiaButton;
    private javax.swing.JButton generarInformeButton;
    private javax.swing.JButton guardarButton;
    private javax.swing.JButton guardarMomentoRemontajeButton;
    private javax.swing.JButton guardarRemontajeDiaButton;
    private javax.swing.JTextField horaInicioMomentoRemontajeText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JButton limpiarBuscadorButton;
    private javax.swing.JButton limpiarDatosEntityButton;
    private javax.swing.JButton limpiarMomentoRemontajeButton;
    private javax.swing.JButton limpiarRemontajeDiaButton;
    private javax.swing.JTextField nombreRemontajeDiaText;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JButton nuevoReglaRemontajeButton;
    private javax.swing.JButton nuevoRemontajeDiaButton;
    private javax.swing.JScrollPane sPanel;
    private javax.swing.JScrollPane sPanel1;
    private javax.swing.JScrollPane sPanel2;
    private javax.swing.JButton salirButton;
    private javax.swing.JTable tablaMomentoRemontaje;
    private javax.swing.JTable tablaRemontajeDia;
    // End of variables declaration//GEN-END:variables

    private void habilitarPanelDatos(boolean enabled) {
        codigoText.setEnabled(enabled);
        descripcionText.setEnabled(enabled);
    }

    private void nuevo() {
        gestorAbm.nuevo();
        bindinDataEntity(servidor);
        habilitarPanelDatos(true);
        eliminarButton.setEnabled(false);
        showDatosDialog(true);
    }

    private void showDatosDialog(boolean show) {
        if (show) {
            Utiles.centrarFormulario(datosDialog);
        }
        datosDialog.setVisible(show);
    }

    private void editar() {
        ReglaControlRemontaje reglaControlRemontaje = null;

        if (buscarTabla.getSelectedRow() != -1) {
            reglaControlRemontaje = model.getRow(buscarTabla.getSelectedRow());
            if (reglaControlRemontaje != null) {
                gestorAbm.setEntity(reglaControlRemontaje);
                bindinDataEntity(servidor);
                habilitarPanelDatos(true);
                showDatosDialog(true);
            }
        }
        if (reglaControlRemontaje == null) {
            JOptionPane.showInternalMessageDialog(this, "Debe seleccionar una Regla de Control para editar");
        }
    }

    private void copiar() {
        ReglaControlRemontaje reglaControlRemontaje = null;

        if (buscarTabla.getSelectedRow() != -1) {
            reglaControlRemontaje = model.getRow(buscarTabla.getSelectedRow());
            if (reglaControlRemontaje != null) {
                gestorAbm.setEntity(reglaControlRemontaje);
                try {
                    gestorAbm.copiar();
                    reset();
                    JOptionPane.showMessageDialog(this, "Se ha copiado exitosamente", "Informaci贸n", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        }
        if (reglaControlRemontaje == null) {
            JOptionPane.showInternalMessageDialog(this, "Debe seleccionar una Regla de Control para copiar");
        }
    }

    private void eliminar() {
        ReglaControlRemontaje reglaControlRemontaje = null;

        try {
            if (buscarTabla.getSelectedRow() != -1) {
                reglaControlRemontaje = model.getRow(buscarTabla.getSelectedRow());
                if (reglaControlRemontaje != null) {

                    int respuesta = JOptionPane.showConfirmDialog(datosDialog, "Est谩 seguro que desea eliminar la Regla de Control seleccionado?",
                            "Confirmar Eliminaci贸n", JOptionPane.OK_CANCEL_OPTION);
                    if (respuesta == JOptionPane.OK_OPTION) {
                        gestorAbm.setEntity(reglaControlRemontaje);
                        gestorAbm.eliminar();
                        reset();
                        showDatosDialog(false);
                    }
                }
            }
            if (reglaControlRemontaje == null) {
                JOptionPane.showInternalMessageDialog(this, "Debe seleccionar una Regla de Control para eliminar");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void reset() {
        limpiarDatosEntity();
        setEntity(null);
        model.setRows(gestorAbm.buscar());
    }

    public ReglaControlRemontajeAbm getGestorAbm() {
        return gestorAbm;
    }

    public void setGestorAbm(ReglaControlRemontajeAbm gestorAbm) {
        this.gestorAbm = gestorAbm;
    }

    public ReglaControlRemontaje getEntity() {
        return gestorAbm.getEntity();
    }

    public void setEntity(ReglaControlRemontaje entity) {
        this.gestorAbm.setEntity(entity);
    }

    private void cerrar() {
        reset();
        showDatosDialog(false);
    }

    private void guardar() {

        bindinDataEntity(cliente);
        try {
            gestorAbm.valid();
            gestorAbm.guardar();
            reset();
            showDatosDialog(false);
        } catch (ValidateException ex) {
            JOptionPane.showMessageDialog(datosDialog, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(datosDialog, ex.getMessage());
        }
    }

    private void limpiarDatosEntity() {
        codigoText.setText("");
        descripcionText.setText("");
    }
    private final int cliente = 0;
    private final int servidor = 1;

    private void bindinDataEntity(int fuente) {
        if (fuente == servidor) {
            codigoText.setText(getEntity().getCodigo());
            descripcionText.setText(getEntity().getDescripcion());
            modelRemontajeDia.setRows(getEntity().getRemontajesDia());
        } else if (fuente == cliente) {
            getEntity().setCodigo(codigoText.getText());
            getEntity().setDescripcion(descripcionText.getText());
        }
    }

    /**
     * RemontajeDia
     */
    private RemontajeDia getRemontajeDia() {
        return gestorAbm.getRemontajeDia();
    }

    private void showDatosDialogRemontajeDia(boolean show) {
        if (show) {
            Utiles.centrarFormulario(datosDialogRemontajeDia);
        }
        datosDialogRemontajeDia.setVisible(show);
    }

    private void nuevoReglaRemontajeDia() {
        gestorAbm.nuevoRemontajeDia();
        bindingDataRemontajeDia(servidor);
        showDatosDialogRemontajeDia(true);
    }

    private void editarReglaRemontajeDia() {
        RemontajeDia remontajeDia = null;

        if (tablaRemontajeDia.getSelectedRow() != -1) {
            remontajeDia = modelRemontajeDia.getRow(tablaRemontajeDia.getSelectedRow());
            if (remontajeDia != null) {
                gestorAbm.setRemontajeDia(remontajeDia);
                bindingDataRemontajeDia(servidor);
                showDatosDialogRemontajeDia(true);
            }
        }
        if (remontajeDia == null) {
            JOptionPane.showInternalMessageDialog(datosDialog, "Debe seleccionar un Remontaje Dia para editar");
        }
    }

    private void guardarRemontajeDia() {

        bindingDataRemontajeDia(cliente);
        try {
            gestorAbm.validRemontajeDia();
            gestorAbm.guardarRemontajeDia();
            resetRemontajeDia();
            showDatosDialogRemontajeDia(false);
        } catch (ValidateException ex) {
            JOptionPane.showMessageDialog(datosDialogRemontajeDia, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(datosDialogRemontajeDia, ex.getMessage());
        }
    }

    private void eliminarReglaRemontajeDia() {
        RemontajeDia remontajeDia = null;

        try {
            if (tablaRemontajeDia.getSelectedRow() != -1) {
                remontajeDia = modelRemontajeDia.getRow(tablaRemontajeDia.getSelectedRow());
                if (remontajeDia != null) {

                    int respuesta = JOptionPane.showConfirmDialog(datosDialog, "Est谩 seguro que desea eliminar el Remontaje Dia seleccionado?",
                            "Confirmar Eliminaci贸n", JOptionPane.OK_CANCEL_OPTION);
                    if (respuesta == JOptionPane.OK_OPTION) {
                        gestorAbm.setRemontajeDia(remontajeDia);
                        gestorAbm.eliminarRemontajeDia();
                        limpiarDatosRemontajeDia();
                        modelRemontajeDia.setRows(getEntity().getRemontajesDia());
                    }
                }
            }
            if (remontajeDia == null) {
                JOptionPane.showInternalMessageDialog(datosDialog, "Debe seleccionar un Remontaje Dia para eliminar");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void bindingDataRemontajeDia(int fuente) {
        if (fuente == servidor) {
            nombreRemontajeDiaText.setText(getRemontajeDia().getNombre());
            modelMomentoRemontaje.setRows(getRemontajeDia().getMomentosRemontajes());
        } else if (fuente == cliente) {
            getRemontajeDia().setNombre(nombreRemontajeDiaText.getText());
        }
    }

    private void limpiarDatosRemontajeDia() {
        nombreRemontajeDiaText.setText("");
    }

    private void resetRemontajeDia() {
        limpiarDatosRemontajeDia();
        gestorAbm.setRemontajeDia(null);
        modelRemontajeDia.setRows(getEntity().getRemontajesDia());
    }

    private void cerrarRemontajeDia() {
        resetRemontajeDia();
        showDatosDialogRemontajeDia(false);
    }

    /**
     * MomentoRemontaje
     */
    private MomentoRemontaje getMomentoRemontaje() {
        return gestorAbm.getMomentoRemontaje();
    }

    private void showDatosDialogMomentoRemontaje(boolean show) {
        if (show) {
            Utiles.centrarFormulario(datosDialogMomentoRemontaje);
        }
        datosDialogMomentoRemontaje.setVisible(show);
    }

    private void nuevoRemontajeDia() {
        gestorAbm.nuevoMomentoRemontaje();
        bindinDataMomentoRemontaje(servidor);
        showDatosDialogMomentoRemontaje(true);
    }

    private void editarMomentoRemontaje() {
        MomentoRemontaje momentoRemontaje = null;

        if (tablaMomentoRemontaje.getSelectedRow() != -1) {
            momentoRemontaje = modelMomentoRemontaje.getRow(tablaMomentoRemontaje.getSelectedRow());
            if (momentoRemontaje != null) {
                gestorAbm.setMomentoRemontaje(momentoRemontaje);
                bindinDataMomentoRemontaje(servidor);
                showDatosDialogMomentoRemontaje(true);
            }
        }
        if (momentoRemontaje == null) {
            JOptionPane.showInternalMessageDialog(datosDialogRemontajeDia, "Debe seleccionar un Momento Remontaje para editar");
        }
    }

    private void guardarMomentoRemontaje() {

        try {
            new Integer(duracionMomentoRemontajeText.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(datosDialogMomentoRemontaje, "La duraci贸n tiene un formato incorrecto.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            DateOperations.stringToDate(horaInicioMomentoRemontajeText.getText());
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(datosDialogMomentoRemontaje, "La hora de inicio tiene un formato incorrecto.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        bindinDataMomentoRemontaje(cliente);
        try {
            gestorAbm.validMomentoRemontaje();
            gestorAbm.guardarMomentoRemontaje();
            resetMomentoRemontaje();
            showDatosDialogMomentoRemontaje(false);
        } catch (ValidateException ex) {
            JOptionPane.showMessageDialog(datosDialogMomentoRemontaje, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(datosDialogMomentoRemontaje, ex.getMessage());
        }
    }

    private void eliminarMomentoRemontaje() {
        MomentoRemontaje momentoRemontaje = null;

        try {
            if (tablaMomentoRemontaje.getSelectedRow() != -1) {
                momentoRemontaje = modelMomentoRemontaje.getRow(tablaMomentoRemontaje.getSelectedRow());
                if (momentoRemontaje != null) {

                    int respuesta = JOptionPane.showConfirmDialog(datosDialog, "Est谩 seguro que desea eliminar el Momento Remontaje seleccionado?",
                            "Confirmar Eliminaci贸n", JOptionPane.OK_CANCEL_OPTION);
                    if (respuesta == JOptionPane.OK_OPTION) {
                        gestorAbm.setMomentoRemontaje(momentoRemontaje);
                        gestorAbm.eliminarMomentoRemontaje();
                        limpiarDatosMomentoRemontaje();
                        modelMomentoRemontaje.setRows(getRemontajeDia().getMomentosRemontajes());
                    }
                }
            }
            if (momentoRemontaje == null) {
                JOptionPane.showInternalMessageDialog(datosDialogRemontajeDia, "Debe seleccionar un Momento Remontaje para eliminar");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(datosDialogRemontajeDia, ex.getMessage());
        }
    }

    private void bindinDataMomentoRemontaje(int fuente) {
        if (fuente == servidor) {
            duracionMomentoRemontajeText.setText(getMomentoRemontaje().getDuracion().toString());
            String horaString = DateOperations.toHHmmssString(getMomentoRemontaje().getHora(), ":");
            horaInicioMomentoRemontajeText.setText(horaString);
        } else if (fuente == cliente) {
            getMomentoRemontaje().setDuracion(new Integer(duracionMomentoRemontajeText.getText()));
            try {
                Date tiempo = DateOperations.stringToDate(horaInicioMomentoRemontajeText.getText());
                getMomentoRemontaje().setHora(tiempo);
            } catch (ParseException ex) {
                Logger.getLogger(ReglaControlRemontajeIFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

    private void limpiarDatosMomentoRemontaje() {
        duracionMomentoRemontajeText.setText("");
        horaInicioMomentoRemontajeText.setText("");
    }

    private void resetMomentoRemontaje() {
        limpiarDatosMomentoRemontaje();
        gestorAbm.setMomentoRemontaje(null);
        modelMomentoRemontaje.setRows(getRemontajeDia().getMomentosRemontajes());
    }

    private void cerrarMomentoRemotaje() {
        resetMomentoRemontaje();
        showDatosDialogMomentoRemontaje(false);
    }
}
