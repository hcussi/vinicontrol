/*
 * MostoEnTanqueIFrame.java
 *
 * Created on 10/09/2009, 14:09:11
 */
package edu.utn.frm.ui.producto;

import edu.utn.frm.action.comunicacion.GestorGeneralEstado;
import edu.utn.frm.action.exception.ReporteException;
import edu.utn.frm.action.producto.MostoEnTanqueAbm;
import edu.utn.frm.dao.generic.ValidateException;
import edu.utn.frm.entities.producto.Camion;
import edu.utn.frm.entities.producto.Finca;
import edu.utn.frm.entities.producto.MostoEnTanque;
import edu.utn.frm.entities.producto.Pesada;
import edu.utn.frm.entities.producto.UnidadMedida;
import edu.utn.frm.entities.producto.Variedad;
import edu.utn.frm.entities.utils.DateOperations;
import edu.utn.frm.ui.IconManager;
import edu.utn.frm.ui.utils.GenericComboBoxModel;
import edu.utn.frm.ui.utils.GenericTableModel;
import edu.utn.frm.ui.utils.Utiles;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Proyecto
 */
public class MostoEnTanqueIFrame extends javax.swing.JInternalFrame {

    private MostoEnTanqueAbm gestorAbm = new MostoEnTanqueAbm();
    private GenericTableModel<MostoEnTanque> model = new GenericTableModel<MostoEnTanque>(
            new String[]{"Código", "Descripción", "Variedad", "Fecha Ingreso", "Fecha Egreso"},
            new String[]{"codigo", "descripcion", "variedad.descripcion", "fechaIngreso", "fechaEgreso"});
    private GenericTableModel<Pesada> modelPesada = new GenericTableModel<Pesada>(
            new String[]{"Fecha", "Cantidad", "Unidad de Medida", "Finca"},
            new String[]{"fechaString", "valor", "unidadMedida.descripcion", "finca.descripcion"});
    private GenericComboBoxModel<Camion> modelCamion = new GenericComboBoxModel<Camion>(
            buscarTodosCamiones(), "descripcion");
    private GenericComboBoxModel<Finca> modelFinca = new GenericComboBoxModel<Finca>(
            buscarTodasFincas(), "descripcion");
    private GenericComboBoxModel<Variedad> modelVariedad = new GenericComboBoxModel<Variedad>(
            buscarTodasVariedades(), "descripcion");
    private GenericComboBoxModel<UnidadMedida> modelUnidadMedida = new GenericComboBoxModel<UnidadMedida>(
            buscarTodasUnidadesMedida(), "descripcion");

    /** Creates new form MostoEnTanqueIFrame */
    public MostoEnTanqueIFrame() {
        initComponents();
        model.setRows(gestorAbm.buscar());
        buscarTabla.setModel(model);
        tablaPesada.setModel(modelPesada);
        this.setFrameIcon(IconManager.getInstance().getFrameIcon());
        //sPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(" Giros Comerciales [" + model.getRowCount() + "] "));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        datosDialog = new javax.swing.JDialog();
        datosPanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        codigoText = new javax.swing.JTextField();
        limpiarDatosEntityButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        descripcionText = new javax.swing.JTextField();
        sPanel1 = new javax.swing.JScrollPane();
        tablaPesada = new javax.swing.JTable();
        nuevoPesadaButton = new javax.swing.JButton();
        editarPesadaButton = new javax.swing.JButton();
        eliminarPesadaButton = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        temperaturaComboBox = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        fechaIngresoDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        fechaEgresoDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        volumenInicialText = new javax.swing.JTextField();
        volumenFinalText = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        guardarButton = new javax.swing.JButton();
        cerrarButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        datosDialogPesada = new javax.swing.JDialog();
        datosPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        valorPesadaText = new javax.swing.JTextField();
        limpiarPesadaButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        fechaPesadaDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        camionComboBox = new javax.swing.JComboBox();
        fincaComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        unidadMedidaComboBox = new javax.swing.JComboBox();
        guardarPesadaButton = new javax.swing.JButton();
        cerrarPesadaButton = new javax.swing.JButton();
        sPanel = new javax.swing.JScrollPane();
        buscarTabla = new javax.swing.JTable();
        salirButton = new javax.swing.JButton();
        buscarCodigoText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        buscarButton = new javax.swing.JButton();
        limpiarBuscadorButton = new javax.swing.JButton();
        nuevoButton = new javax.swing.JButton();
        editarButton = new javax.swing.JButton();
        buscarDescripcionText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        buscarFechaIngresoDateChooser = new com.toedter.calendar.JDateChooser();
        buscarFechaEgresoDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        copiarButton = new javax.swing.JButton();
        generarInformeButton = new javax.swing.JButton();

        datosDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        datosDialog.setTitle("Producto - Mosto en Tanque");
        datosDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        datosDialog.setLocationByPlatform(true);
        datosDialog.setMinimumSize(new java.awt.Dimension(535, 450));
        datosDialog.setModal(true);
        datosDialog.setName("datosDialog"); // NOI18N
        datosDialog.setResizable(false);
        datosDialog.addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowClosed(java.awt.event.WindowEvent evt) {
                datosDialog_windowClosed(evt);
            }
        });

        datosPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Producto - Mosto en Tanque"));
        datosPanel.setName("datosPanel"); // NOI18N

        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel4.setText("Codigo:");
        jLabel4.setName("jLabel4"); // NOI18N

        codigoText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        codigoText.setName("codigoText"); // NOI18N

        limpiarDatosEntityButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/limpiar.png"))); // NOI18N
        limpiarDatosEntityButton.setText("Limpiar");
        limpiarDatosEntityButton.setName("limpiarDatosEntityButton"); // NOI18N
        limpiarDatosEntityButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarDatosEntityButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("Descripción:");
        jLabel7.setName("jLabel7"); // NOI18N

        descripcionText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        descripcionText.setName("descripcionText"); // NOI18N

        sPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesadas"));
        sPanel1.setName("sPanel1"); // NOI18N

        tablaPesada.setAutoCreateRowSorter(true);
        tablaPesada.setModel(model);
        tablaPesada.setName("tablaPesada"); // NOI18N
        tablaPesada.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablaPesada.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPesadaMouseClicked(evt);
            }
        });
        sPanel1.setViewportView(tablaPesada);

        nuevoPesadaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/agregar.png"))); // NOI18N
        nuevoPesadaButton.setText("Nuevo");
        nuevoPesadaButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        nuevoPesadaButton.setName("nuevoPesadaButton"); // NOI18N
        nuevoPesadaButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoPesadaButton(evt);
            }
        });

        editarPesadaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/editar.png"))); // NOI18N
        editarPesadaButton.setText("Editar");
        editarPesadaButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        editarPesadaButton.setName("editarPesadaButton"); // NOI18N
        editarPesadaButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarPesadaButton(evt);
            }
        });

        eliminarPesadaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/eliminar.png"))); // NOI18N
        eliminarPesadaButton.setText("Eliminar");
        eliminarPesadaButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        eliminarPesadaButton.setName("eliminarPesadaButton"); // NOI18N
        eliminarPesadaButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarPesadaButton(evt);
            }
        });

        jLabel11.setText("Variedad:");
        jLabel11.setName("jLabel11"); // NOI18N

        temperaturaComboBox.setModel(modelVariedad);
        temperaturaComboBox.setName("temperaturaComboBox"); // NOI18N

        jLabel12.setText("Fecha Ingreso:");
        jLabel12.setName("jLabel12"); // NOI18N

        fechaIngresoDateChooser.setName("fechaIngresoDateChooser"); // NOI18N

        jLabel13.setText("Fecha Egreso:");
        jLabel13.setName("jLabel13"); // NOI18N

        fechaEgresoDateChooser.setName("fechaEgresoDateChooser"); // NOI18N

        jLabel14.setText("Volumen Inicial:");
        jLabel14.setName("jLabel14"); // NOI18N

        jLabel15.setText("Volumen Final:");
        jLabel15.setName("jLabel15"); // NOI18N

        volumenInicialText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        volumenInicialText.setName("volumenInicialText"); // NOI18N

        volumenFinalText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        volumenFinalText.setName("volumenFinalText"); // NOI18N

        jLabel16.setText("Kilos");
        jLabel16.setName("jLabel16"); // NOI18N

        javax.swing.GroupLayout datosPanelLayout = new javax.swing.GroupLayout(datosPanel);
        datosPanel.setLayout(datosPanelLayout);
        datosPanelLayout.setHorizontalGroup(
                datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosPanelLayout.createSequentialGroup().addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosPanelLayout.createSequentialGroup().addComponent(nuevoPesadaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(editarPesadaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(eliminarPesadaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(datosPanelLayout.createSequentialGroup().addContainerGap().addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosPanelLayout.createSequentialGroup().addComponent(jLabel12).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(datosPanelLayout.createSequentialGroup().addComponent(volumenInicialText, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel15)).addGroup(datosPanelLayout.createSequentialGroup().addComponent(fechaIngresoDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel13))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosPanelLayout.createSequentialGroup().addComponent(volumenFinalText, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18, 18, 18).addComponent(jLabel16)).addComponent(fechaEgresoDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))).addGroup(datosPanelLayout.createSequentialGroup().addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel14).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 292, javax.swing.GroupLayout.PREFERRED_SIZE))))).addContainerGap(136, Short.MAX_VALUE)).addGroup(datosPanelLayout.createSequentialGroup().addGap(24, 24, 24).addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel7).addComponent(jLabel4).addComponent(jLabel11)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosPanelLayout.createSequentialGroup().addComponent(codigoText, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 240, Short.MAX_VALUE).addComponent(limpiarDatosEntityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()).addGroup(datosPanelLayout.createSequentialGroup().addComponent(descripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(129, Short.MAX_VALUE)).addGroup(datosPanelLayout.createSequentialGroup().addComponent(temperaturaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(263, Short.MAX_VALUE)))).addGroup(datosPanelLayout.createSequentialGroup().addComponent(sPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 503, Short.MAX_VALUE).addContainerGap()));
        datosPanelLayout.setVerticalGroup(
                datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosPanelLayout.createSequentialGroup().addContainerGap().addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(codigoText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel4).addComponent(limpiarDatosEntityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(descripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel7)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(temperaturaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel11)).addGap(28, 28, 28).addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel12).addComponent(fechaIngresoDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel13).addComponent(fechaEgresoDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel14).addComponent(jLabel15).addComponent(volumenInicialText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(volumenFinalText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel16)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(sPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(nuevoPesadaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(editarPesadaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(eliminarPesadaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(16, Short.MAX_VALUE)));

        guardarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/guardar.png"))); // NOI18N
        guardarButton.setText("Guardar");
        guardarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        guardarButton.setName("guardarButton"); // NOI18N
        guardarButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonguardar(evt);
            }
        });

        cerrarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/cerrar.png"))); // NOI18N
        cerrarButton.setText("Cerrar");
        cerrarButton.setName("cerrarButton"); // NOI18N
        cerrarButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarButtonActionPerformed(evt);
            }
        });

        eliminarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/eliminar.png"))); // NOI18N
        eliminarButton.setText("Eliminar");
        eliminarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        eliminarButton.setName("eliminarButton"); // NOI18N
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar(evt);
            }
        });

        javax.swing.GroupLayout datosDialogLayout = new javax.swing.GroupLayout(datosDialog.getContentPane());
        datosDialog.getContentPane().setLayout(datosDialogLayout);
        datosDialogLayout.setHorizontalGroup(
                datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosDialogLayout.createSequentialGroup().addGroup(datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosDialogLayout.createSequentialGroup().addContainerGap().addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(eliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 239, Short.MAX_VALUE).addComponent(cerrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(datosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap()));
        datosDialogLayout.setVerticalGroup(
                datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datosDialogLayout.createSequentialGroup().addContainerGap().addComponent(datosPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(eliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(cerrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap()));

        datosDialogPesada.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        datosDialogPesada.setTitle("Pesada");
        datosDialogPesada.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        datosDialogPesada.setLocationByPlatform(true);
        datosDialogPesada.setMinimumSize(new java.awt.Dimension(485, 260));
        datosDialogPesada.setModal(true);
        datosDialogPesada.setName("datosDialogPesada"); // NOI18N
        datosDialogPesada.setResizable(false);
        datosDialogPesada.addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowClosed(java.awt.event.WindowEvent evt) {
                datosDialogPesada_windowClosed(evt);
            }
        });

        datosPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Pesada"));
        datosPanel1.setName("datosPanel1"); // NOI18N

        jLabel5.setFont(jLabel5.getFont().deriveFont(jLabel5.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel5.setText("Cantidad:");
        jLabel5.setName("jLabel5"); // NOI18N

        valorPesadaText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        valorPesadaText.setName("valorPesadaText"); // NOI18N

        limpiarPesadaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/limpiar.png"))); // NOI18N
        limpiarPesadaButton.setText("Limpiar");
        limpiarPesadaButton.setName("limpiarPesadaButton"); // NOI18N
        limpiarPesadaButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarPesadaButtonActionPerformed(evt);
            }
        });

        jLabel8.setFont(jLabel8.getFont().deriveFont(jLabel8.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel8.setText("Fecha Ingreso:");
        jLabel8.setName("jLabel8"); // NOI18N

        fechaPesadaDateChooser.setName("fechaPesadaDateChooser"); // NOI18N

        jLabel9.setFont(jLabel9.getFont().deriveFont(jLabel9.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel9.setText("Camión:");
        jLabel9.setName("jLabel9"); // NOI18N

        camionComboBox.setModel(modelCamion);
        camionComboBox.setName("camionComboBox"); // NOI18N

        fincaComboBox.setModel(modelFinca);
        fincaComboBox.setName("fincaComboBox"); // NOI18N

        jLabel10.setFont(jLabel10.getFont().deriveFont(jLabel10.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel10.setText("Finca:");
        jLabel10.setName("jLabel10"); // NOI18N

        unidadMedidaComboBox.setModel(modelUnidadMedida);
        unidadMedidaComboBox.setName("unidadMedidaComboBox"); // NOI18N

        javax.swing.GroupLayout datosPanel1Layout = new javax.swing.GroupLayout(datosPanel1);
        datosPanel1.setLayout(datosPanel1Layout);
        datosPanel1Layout.setHorizontalGroup(
                datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosPanel1Layout.createSequentialGroup().addGap(101, 101, 101).addComponent(fechaPesadaDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(234, 234, 234)).addGroup(datosPanel1Layout.createSequentialGroup().addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(javax.swing.GroupLayout.Alignment.LEADING, datosPanel1Layout.createSequentialGroup().addGap(101, 101, 101).addComponent(valorPesadaText, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, datosPanel1Layout.createSequentialGroup().addGap(24, 24, 24).addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel9).addComponent(jLabel8).addComponent(jLabel5).addComponent(jLabel10)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(fincaComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, 139, Short.MAX_VALUE).addComponent(camionComboBox, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(unidadMedidaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(limpiarPesadaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap()));
        datosPanel1Layout.setVerticalGroup(
                datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosPanel1Layout.createSequentialGroup().addContainerGap().addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(valorPesadaText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel5).addComponent(limpiarPesadaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(unidadMedidaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(fechaPesadaDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel8)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel9).addComponent(camionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(fincaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel10)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        guardarPesadaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/aceptar.png"))); // NOI18N
        guardarPesadaButton.setText("Aceptar");
        guardarPesadaButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        guardarPesadaButton.setName("guardarPesadaButton"); // NOI18N
        guardarPesadaButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarPesadaButton(evt);
            }
        });

        cerrarPesadaButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/cerrar.png"))); // NOI18N
        cerrarPesadaButton.setText("Cancelar");
        cerrarPesadaButton.setName("cerrarPesadaButton"); // NOI18N
        cerrarPesadaButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarPesadaButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout datosDialogPesadaLayout = new javax.swing.GroupLayout(datosDialogPesada.getContentPane());
        datosDialogPesada.getContentPane().setLayout(datosDialogPesadaLayout);
        datosDialogPesadaLayout.setHorizontalGroup(
                datosDialogPesadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosDialogPesadaLayout.createSequentialGroup().addGroup(datosDialogPesadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosDialogPesadaLayout.createSequentialGroup().addContainerGap().addComponent(guardarPesadaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 281, Short.MAX_VALUE).addComponent(cerrarPesadaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)).addComponent(datosPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addContainerGap()));
        datosDialogPesadaLayout.setVerticalGroup(
                datosDialogPesadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datosDialogPesadaLayout.createSequentialGroup().addContainerGap().addComponent(datosPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(datosDialogPesadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(guardarPesadaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(cerrarPesadaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap()));

        setIconifiable(true);
        setTitle("Producto - Mosto en Tanque");

        sPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Productos - Mosto En Tanque"));
        sPanel.setName("sPanel"); // NOI18N

        buscarTabla.setAutoCreateRowSorter(true);
        buscarTabla.setModel(model);
        buscarTabla.setName("buscarTable"); // NOI18N
        buscarTabla.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        buscarTabla.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscarTablaMouseClicked(evt);
            }
        });
        sPanel.setViewportView(buscarTabla);

        salirButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/cerrar.png"))); // NOI18N
        salirButton.setText("Cerrar");
        salirButton.setName("salirButton"); // NOI18N
        salirButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirButtonActionPerformed(evt);
            }
        });

        buscarCodigoText.setName("buscarCodigoText"); // NOI18N

        jLabel1.setText("Código");
        jLabel1.setName("jLabel1"); // NOI18N

        buscarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/buscar.png"))); // NOI18N
        buscarButton.setText("Buscar");
        buscarButton.setName("buscarButton"); // NOI18N
        buscarButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });

        limpiarBuscadorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/limpiar.png"))); // NOI18N
        limpiarBuscadorButton.setText("Limpiar");
        limpiarBuscadorButton.setName("limpiarBuscarButton"); // NOI18N
        limpiarBuscadorButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarBuscadorButtonActionPerformed(evt);
            }
        });

        nuevoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/agregar.png"))); // NOI18N
        nuevoButton.setText("Nuevo");
        nuevoButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        nuevoButton.setName("nuevoButton"); // NOI18N
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevo(evt);
            }
        });

        editarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/editar.png"))); // NOI18N
        editarButton.setText("Editar");
        editarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        editarButton.setName("editarButton"); // NOI18N
        editarButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonnuevo(evt);
            }
        });

        buscarDescripcionText.setName("buscarDescripcionText"); // NOI18N

        jLabel3.setText("Descripción");
        jLabel3.setName("jLabel3"); // NOI18N

        buscarFechaIngresoDateChooser.setName("buscarFechaIngresoDateChooser"); // NOI18N

        buscarFechaEgresoDateChooser.setName("buscarFechaEgresoDateChooser"); // NOI18N

        jLabel2.setText("Ingreso");
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel6.setText("Egreso");
        jLabel6.setName("jLabel6"); // NOI18N

        copiarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/copiar.png"))); // NOI18N
        copiarButton.setText("Copiar");
        copiarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        copiarButton.setName("copiarButton"); // NOI18N
        copiarButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarButton(evt);
            }
        });

        generarInformeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/informe.png"))); // NOI18N
        generarInformeButton.setText("Generar Informe");
        generarInformeButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        generarInformeButton.setName("generarInformeButton"); // NOI18N
        generarInformeButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarInformeButton(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(sPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE).addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup().addComponent(nuevoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(editarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(copiarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(generarInformeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE).addComponent(salirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(buscarCodigoText, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(buscarDescripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel3)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(buscarFechaIngresoDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel2)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel6).addComponent(buscarFechaEgresoDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(buscarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(limpiarBuscadorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))).addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jLabel3)).addGap(8, 8, 8)).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jLabel6)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(buscarCodigoText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(buscarDescripcionText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(buscarFechaIngresoDateChooser, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(buscarFechaEgresoDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(limpiarBuscadorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(buscarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(sPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 464, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(nuevoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(salirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(editarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(copiarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(generarInformeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap()));

        sPanel.getAccessibleContext().setAccessibleName("Cuenta Mayor"); // NOI18N

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuevo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevo
        nuevo();
    }//GEN-LAST:event_nuevo

    private void buscarTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarTablaMouseClicked
        if (evt.getClickCount() > 1) {
            editar();
        }
    }//GEN-LAST:event_buscarTablaMouseClicked

    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
        dispose();
    }//GEN-LAST:event_salirButtonActionPerformed

    private void eliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar
        eliminar();
    }//GEN-LAST:event_eliminar

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
        gestorAbm.getFilter().setCodigo(buscarCodigoText.getText());
        gestorAbm.getFilter().setDescripcion(buscarDescripcionText.getText());
        gestorAbm.getFilter().setFechaIngreso(buscarFechaIngresoDateChooser.getDate());
        gestorAbm.getFilter().setFechaEgreso(buscarFechaEgresoDateChooser.getDate());
        model.setRows(gestorAbm.buscar());
    }//GEN-LAST:event_buscarButtonActionPerformed

    private void limpiarBuscadorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarBuscadorButtonActionPerformed
        buscarCodigoText.setText("");
        buscarDescripcionText.setText("");
        buscarFechaIngresoDateChooser.setDate(null);
        buscarFechaEgresoDateChooser.setDate(null);
        gestorAbm.getFilter().clear();
    }//GEN-LAST:event_limpiarBuscadorButtonActionPerformed

    private void editarButtonnuevo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonnuevo
        editar();
    }//GEN-LAST:event_editarButtonnuevo

    private void limpiarDatosEntityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarDatosEntityButtonActionPerformed
        limpiarDatosEntity();
    }//GEN-LAST:event_limpiarDatosEntityButtonActionPerformed

    private void guardarButtonguardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonguardar
        guardar();
    }//GEN-LAST:event_guardarButtonguardar

    private void cerrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarButtonActionPerformed
        cerrar();
    }//GEN-LAST:event_cerrarButtonActionPerformed

    private void datosDialog_windowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_datosDialog_windowClosed
        cerrar();
    }//GEN-LAST:event_datosDialog_windowClosed

    private void tablaPesadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPesadaMouseClicked
        if (evt.getClickCount() > 1) {
            editarPesada();
        }
    }//GEN-LAST:event_tablaPesadaMouseClicked

    private void nuevoPesadaButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoPesadaButton
        nuevoPesada();
    }//GEN-LAST:event_nuevoPesadaButton

    private void editarPesadaButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarPesadaButton
        editarPesada();
    }//GEN-LAST:event_editarPesadaButton

    private void eliminarPesadaButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarPesadaButton
        eliminarPesada();
    }//GEN-LAST:event_eliminarPesadaButton

    private void limpiarPesadaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarPesadaButtonActionPerformed
        limpiarDatosPesada();
    }//GEN-LAST:event_limpiarPesadaButtonActionPerformed

    private void guardarPesadaButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarPesadaButton
        guardarPesada();
    }//GEN-LAST:event_guardarPesadaButton

    private void cerrarPesadaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarPesadaButtonActionPerformed
        cerrarPesada();
    }//GEN-LAST:event_cerrarPesadaButtonActionPerformed

    private void datosDialogPesada_windowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_datosDialogPesada_windowClosed
        cerrarPesada();
    }//GEN-LAST:event_datosDialogPesada_windowClosed

    private void copiarButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarButton
        copiar();
    }//GEN-LAST:event_copiarButton

    private void generarInformeButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarInformeButton
        try {
            gestorAbm.ejecutarReporte();
        } catch (ReporteException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al generar el reporte", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_generarInformeButton
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarButton;
    private javax.swing.JTextField buscarCodigoText;
    private javax.swing.JTextField buscarDescripcionText;
    private com.toedter.calendar.JDateChooser buscarFechaEgresoDateChooser;
    private com.toedter.calendar.JDateChooser buscarFechaIngresoDateChooser;
    private javax.swing.JTable buscarTabla;
    private javax.swing.JComboBox camionComboBox;
    private javax.swing.JButton cerrarButton;
    private javax.swing.JButton cerrarPesadaButton;
    private javax.swing.JTextField codigoText;
    private javax.swing.JButton copiarButton;
    private javax.swing.JDialog datosDialog;
    private javax.swing.JDialog datosDialogPesada;
    private javax.swing.JPanel datosPanel;
    private javax.swing.JPanel datosPanel1;
    private javax.swing.JTextField descripcionText;
    private javax.swing.JButton editarButton;
    private javax.swing.JButton editarPesadaButton;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JButton eliminarPesadaButton;
    private com.toedter.calendar.JDateChooser fechaEgresoDateChooser;
    private com.toedter.calendar.JDateChooser fechaIngresoDateChooser;
    private com.toedter.calendar.JDateChooser fechaPesadaDateChooser;
    private javax.swing.JComboBox fincaComboBox;
    private javax.swing.JButton generarInformeButton;
    private javax.swing.JButton guardarButton;
    private javax.swing.JButton guardarPesadaButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton limpiarBuscadorButton;
    private javax.swing.JButton limpiarDatosEntityButton;
    private javax.swing.JButton limpiarPesadaButton;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JButton nuevoPesadaButton;
    private javax.swing.JScrollPane sPanel;
    private javax.swing.JScrollPane sPanel1;
    private javax.swing.JButton salirButton;
    private javax.swing.JTable tablaPesada;
    private javax.swing.JComboBox temperaturaComboBox;
    private javax.swing.JComboBox unidadMedidaComboBox;
    private javax.swing.JTextField valorPesadaText;
    private javax.swing.JTextField volumenFinalText;
    private javax.swing.JTextField volumenInicialText;
    // End of variables declaration//GEN-END:variables

    private void habilitarPanelDatos(boolean enabled) {
        codigoText.setEnabled(enabled);
        descripcionText.setEnabled(enabled);
        fechaEgresoDateChooser.setEnabled(enabled);
        fechaIngresoDateChooser.setEnabled(enabled);
        volumenFinalText.setEnabled(enabled);
        volumenInicialText.setEnabled(enabled);
    }

    private void nuevo() {
        gestorAbm.nuevo();
        gestorAbm.setCrearProceso(true);
        bindinDataEntity(servidor);
        habilitarPanelDatos(true);
        eliminarButton.setEnabled(false);
        showDatosDialog(true);
    }

    private void showDatosDialog(boolean show) {
        if (show) {
            Utiles.centrarFormulario(datosDialog);
        }
        datosDialog.setVisible(show);
    }

    private void editar() {
        MostoEnTanque mostoEnTanque = null;

        if (buscarTabla.getSelectedRow() != -1) {
            mostoEnTanque = model.getRow(buscarTabla.getSelectedRow());
            if (mostoEnTanque != null) {
                gestorAbm.setCrearProceso(false);
                gestorAbm.setEntity(mostoEnTanque);
                bindinDataEntity(servidor);
                habilitarPanelDatos(true);
                showDatosDialog(true);
            }
        }
        if (mostoEnTanque == null) {
            JOptionPane.showInternalMessageDialog(this, "Debe seleccionar un Producto para editar");
        }
    }

    private void copiar() {
        MostoEnTanque mostoEnTanque = null;

        if (buscarTabla.getSelectedRow() != -1) {
            mostoEnTanque = model.getRow(buscarTabla.getSelectedRow());
            if (mostoEnTanque != null) {
                gestorAbm.setEntity(mostoEnTanque);
                try {
                    gestorAbm.setCrearProceso(true);
                    gestorAbm.copiar();
                    gestorAbm.crearProceso();
                    reset();
                    JOptionPane.showMessageDialog(this, "Se ha copiado exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        }
        if (mostoEnTanque == null) {
            JOptionPane.showInternalMessageDialog(this, "Debe seleccionar un Producto para copiar");
        }
    }

    private void eliminar() {
        MostoEnTanque mostoEnTanque = null;

        try {
            if (buscarTabla.getSelectedRow() != -1) {
                mostoEnTanque = model.getRow(buscarTabla.getSelectedRow());
                if (mostoEnTanque != null) {

                    int respuesta = JOptionPane.showConfirmDialog(datosDialog, "Está seguro que desea eliminar el Producto seleccionado?",
                            "Confirmar Eliminación", JOptionPane.OK_CANCEL_OPTION);
                    if (respuesta == JOptionPane.OK_OPTION) {
                        gestorAbm.setEntity(mostoEnTanque);
                        gestorAbm.eliminar();
                        reset();
                        showDatosDialog(false);
                    }
                }
            }
            if (mostoEnTanque == null) {
                JOptionPane.showInternalMessageDialog(this, "Debe seleccionar un Producto para eliminar");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void reset() {
        limpiarDatosEntity();
        setEntity(null);
        model.setRows(gestorAbm.buscar());
    }

    public MostoEnTanqueAbm getGestorAbm() {
        return gestorAbm;
    }

    public void setGestorAbm(MostoEnTanqueAbm gestorAbm) {
        this.gestorAbm = gestorAbm;
    }

    public MostoEnTanque getEntity() {
        return gestorAbm.getEntity();
    }

    public void setEntity(MostoEnTanque entity) {
        this.gestorAbm.setEntity(entity);
    }

    private void cerrar() {
        reset();
        showDatosDialog(false);
    }

    private void guardar() {

        boolean usado = GestorGeneralEstado.getInstance().isProductoUsado(getEntity());
        if( usado ){
            JOptionPane.showMessageDialog(datosDialog, "El producto esta siendo usado en el control de " +
                    "procesos, no se puede modificar.", "Información", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        bindinDataEntity(cliente);
        try {
            if (!getEntity().validarFechasPesadas()) {
                JOptionPane.showMessageDialog(datosDialog, "Las fechas de las pesadas deben ser menor o igual a la fecha de ingreso",
                        "Error de Validación", JOptionPane.WARNING_MESSAGE);
                JOptionPane.showMessageDialog(datosDialog, "Se ha corregido las fechas de las pesadas",
                        "Información", JOptionPane.INFORMATION_MESSAGE);
                modelPesada.setRows(getEntity().getPesadas());
                return;
            }
            if (getEntity().getFechaIngreso() != null && DateOperations.compareMayorTime(getEntity().getFechaIngreso(), new Date())) {
                JOptionPane.showMessageDialog(datosDialog, "La fecha de ingreso no puede ser mayor a la fecha de hoy",
                        "Error de Validación", JOptionPane.WARNING_MESSAGE);
                JOptionPane.showMessageDialog(datosDialog, "Se ha corregido la fecha de ingreso",
                        "Información", JOptionPane.INFORMATION_MESSAGE);
                getEntity().setFechaIngreso(new Date());
                return;
            }
            if (getEntity().getFechaIngreso() != null && getEntity().getFechaEgreso() != null) {
                if (DateOperations.compareMayorTime(getEntity().getFechaIngreso(), getEntity().getFechaEgreso())) {
                    JOptionPane.showMessageDialog(datosDialog, "Las fecha de ingreso no puede ser mayor a la fecha de egreso",
                            "Error de Validación", JOptionPane.WARNING_MESSAGE);
                    return;
                }
            }

            gestorAbm.valid();
            gestorAbm.guardar();
            gestorAbm.crearProceso();
            reset();
            showDatosDialog(false);
        } catch (ValidateException ex) {
            JOptionPane.showMessageDialog(datosDialog, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(datosDialog, ex.getMessage());
        }
    }

    private void limpiarDatosEntity() {
        codigoText.setText("");
        descripcionText.setText("");
        volumenFinalText.setText("");
        volumenInicialText.setText("");
        fechaIngresoDateChooser.setDate(null);
        fechaEgresoDateChooser.setDate(null);
        modelVariedad.setSelectedEntity(null);
    }
    private final int cliente = 0;
    private final int servidor = 1;

    private void bindinDataEntity(int fuente) {
        if (fuente == servidor) {
            codigoText.setText(getEntity().getCodigo());
            descripcionText.setText(getEntity().getDescripcion());
            fechaIngresoDateChooser.setDate(getEntity().getFechaIngreso());
            fechaEgresoDateChooser.setDate(getEntity().getFechaEgreso());
            volumenInicialText.setText(getEntity().getVolumenInicial().toString());
            volumenFinalText.setText(getEntity().getVolumenFinal().toString());
            modelVariedad.setSelectedEntity(getEntity().getVariedad());
            modelPesada.setRows(getEntity().getPesadas());
        } else if (fuente == cliente) {
            getEntity().setCodigo(codigoText.getText());
            getEntity().setDescripcion(descripcionText.getText());
            getEntity().setFechaIngreso(fechaIngresoDateChooser.getDate());
            getEntity().setFechaEgreso(fechaEgresoDateChooser.getDate());
            getEntity().setVolumenInicial(Double.valueOf(getEntity().getVolumenInicial()));
            getEntity().setVolumenFinal(Double.valueOf(getEntity().getVolumenFinal()));
            getEntity().setVariedad(modelVariedad.getSelectedEntity());
        }
    }

    /**
     * Pesada
     */
    private Pesada getPesada() {
        return gestorAbm.getPesada();
    }

    private void showDatosDialogPesada(boolean show) {
        if (show) {
            Utiles.centrarFormulario(datosDialogPesada);
        }
        datosDialogPesada.setVisible(show);
    }

    private void nuevoPesada() {
        gestorAbm.nuevoPesada();
        bindingDataPesada(servidor);
        showDatosDialogPesada(true);
    }

    private void editarPesada() {
        Pesada pesada = null;

        if (tablaPesada.getSelectedRow() != -1) {
            pesada = modelPesada.getRow(tablaPesada.getSelectedRow());
            if (pesada != null) {
                gestorAbm.setPesada(pesada);
                bindingDataPesada(servidor);
                showDatosDialogPesada(true);
            }
        }
        if (pesada == null) {
            JOptionPane.showInternalMessageDialog(datosDialog, "Debe seleccionar una Pesada para editar");
        }
    }

    private void guardarPesada() {

        bindingDataPesada(cliente);
        try {
            if (DateOperations.compareMayorTime(getPesada().getFecha(), new Date())) {
                JOptionPane.showMessageDialog(datosDialog, "La fecha de pesada no puede ser mayor a la fecha de hoy",
                        "Error de Validación", JOptionPane.WARNING_MESSAGE);
                return;
            }

            gestorAbm.validPesada();
            gestorAbm.guardarPesada();
            resetPesada();
            showDatosDialogPesada(false);
        } catch (ValidateException ex) {
            JOptionPane.showMessageDialog(datosDialogPesada, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(datosDialogPesada, ex.getMessage());
        }
    }

    private void eliminarPesada() {
        Pesada pesada = null;

        try {
            if (tablaPesada.getSelectedRow() != -1) {
                pesada = modelPesada.getRow(tablaPesada.getSelectedRow());
                if (pesada != null) {

                    int respuesta = JOptionPane.showConfirmDialog(datosDialog, "Está seguro que desea eliminar la Pesada seleccionada?",
                            "Confirmar Eliminación", JOptionPane.OK_CANCEL_OPTION);
                    if (respuesta == JOptionPane.OK_OPTION) {
                        gestorAbm.setPesada(pesada);
                        gestorAbm.eliminarPesada();
                        limpiarDatosPesada();
                        modelPesada.setRows(getEntity().getPesadas());
                    }
                }
            }
            if (pesada == null) {
                JOptionPane.showInternalMessageDialog(datosDialog, "Debe seleccionar una Pesada para eliminar");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void bindingDataPesada(int fuente) {
        if (fuente == servidor) {
            valorPesadaText.setText(getPesada().getValor().toString());
            fechaPesadaDateChooser.setDate(getPesada().getFecha());
            modelCamion.setSelectedEntity(getPesada().getCamion());
            modelFinca.setSelectedEntity(getPesada().getFinca());
            modelUnidadMedida.setSelectedEntity(getPesada().getUnidadMedida());
        } else if (fuente == cliente) {
            getPesada().setValor(Double.valueOf(valorPesadaText.getText()));
            getPesada().setFecha(fechaPesadaDateChooser.getDate());
            getPesada().setCamion(modelCamion.getSelectedEntity());
            getPesada().setFinca(modelFinca.getSelectedEntity());
            getPesada().setUnidadMedida(modelUnidadMedida.getSelectedEntity());
        }
    }

    private void limpiarDatosPesada() {
        valorPesadaText.setText("");
        fechaPesadaDateChooser.setDate(null);
        modelCamion.setSelectedEntity(null);
        modelFinca.setSelectedEntity(null);
    }

    private void resetPesada() {
        limpiarDatosPesada();
        gestorAbm.setPesada(null);
        modelPesada.setRows(getEntity().getPesadas());
    }

    private void cerrarPesada() {
        resetPesada();
        showDatosDialogPesada(false);
    }

    private List<Camion> buscarTodosCamiones() {
        return gestorAbm.buscarTodosCamiones();
    }

    private List<Finca> buscarTodasFincas() {
        return gestorAbm.buscarTodasFincas();
    }

    private List<Variedad> buscarTodasVariedades() {
        return gestorAbm.buscarTodasVariedades();
    }

    private List<UnidadMedida> buscarTodasUnidadesMedida() {
        return Arrays.asList(UnidadMedida.values());
    }
}
