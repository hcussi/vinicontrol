/*
 * ConfiguracionSistemaIFrame.java
 *
 * Created on 04/08/2009, 17:09:11
 */
package edu.utn.frm.ui.sistema;

import edu.utn.frm.action.comunicacion.GestorGeneralEstado;
import edu.utn.frm.action.sistema.ConfiguracionSistemaAbm;
import edu.utn.frm.dao.generic.PersistException;
import edu.utn.frm.dao.generic.ValidateException;
import edu.utn.frm.entities.sistema.ConfiguracionSistema;
import edu.utn.frm.entities.tanque.Tanque;
import edu.utn.frm.entities.tanque.demanda.EstadoPrediccion;
import edu.utn.frm.entities.tanque.demanda.EstadoPrediccionTendencia;
import edu.utn.frm.ui.IconManager;
import edu.utn.frm.ui.utils.GenericComboBoxModel;
import edu.utn.frm.ui.utils.Utiles;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;
import java.text.ParseException;
import java.util.List;

/**
 *
 * @author Proyecto
 */
public class ConfiguracionSistemaIFrame extends javax.swing.JInternalFrame {

    private ConfiguracionSistemaAbm gestorAbm = new ConfiguracionSistemaAbm();
    private GenericComboBoxModel<Tanque> modelTanque = new GenericComboBoxModel<Tanque>(
            buscarTodosTanques(), "descripcion");

    /** Creates new form ConfiguracionSistemaIFrame */
    public ConfiguracionSistemaIFrame() {
        initComponents();
        habilitarPanelDatos(true);
        bindinDataEntity(servidor);
        if (modelTanque.getSelectedEntity() != null) {
            mostrarEstadoPrediccion(modelTanque.getSelectedEntity());
        }
        this.setFrameIcon(IconManager.getInstance().getFrameIcon());
        //sPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(" Giros Comerciales [" + model.getRowCount() + "] "));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        datosPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        empresaText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        razonSocialText = new javax.swing.JTextField();
        limpiarDatosEntityButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        MaskFormatter mCUIT = null;
        try {
            mCUIT = new MaskFormatter("##-########-#");
            mCUIT.setPlaceholderCharacter('_');
        } catch (ParseException ex) {
            ex.printStackTrace();
        }
        cuitText = new javax.swing.JFormattedTextField(mCUIT);
        jLabel8 = new javax.swing.JLabel();
        direccionText = new javax.swing.JTextField();
        datosProceso = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        automaticoCheckBox = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        reintentosReconexionTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        segundosReconexionTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        mostrarAlarmaTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        minutosPredecirTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        verificarProcesosTextField = new javax.swing.JTextField();
        verificarRemontajeTextField = new javax.swing.JTextField();
        guardarButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        tanqueComboBox = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        betaTextField = new javax.swing.JTextField();
        alfaTextField = new javax.swing.JTextField();
        promAnteriorTextField = new javax.swing.JTextField();
        tenAnteriorTextField = new javax.swing.JTextField();
        guardarEstadoButton = new javax.swing.JButton();
        porDefectoButton = new javax.swing.JButton();
        salirButton = new javax.swing.JButton();

        setIconifiable(true);
        setTitle("Configuraci贸n del Sistema");

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        jTabbedPane2.setName("jTabbedPane2"); // NOI18N

        datosPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Configuraci贸n Empresa"));
        datosPanel.setName("datosPanel"); // NOI18N

        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel2.setText("Empresa:");
        jLabel2.setName("jLabel2"); // NOI18N

        empresaText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        empresaText.setName("txtTNombre"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${entity.codigo}"), empresaText, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel6.setText("Raz贸n Social:");
        jLabel6.setName("jLabel6"); // NOI18N

        razonSocialText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        razonSocialText.setName("txtTNombre"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${entity.detalle}"), razonSocialText, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        limpiarDatosEntityButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/limpiar.png"))); // NOI18N
        limpiarDatosEntityButton.setText("Limpiar");
        limpiarDatosEntityButton.setName("limpiarDatosEntityButton"); // NOI18N
        limpiarDatosEntityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarDatosEntityButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("CUIT:");
        jLabel7.setName("jLabel7"); // NOI18N

        cuitText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        cuitText.setName("cuitText"); // NOI18N

        jLabel8.setText("Direcci贸n:");
        jLabel8.setName("jLabel8"); // NOI18N

        direccionText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        direccionText.setName("direccionText"); // NOI18N

        javax.swing.GroupLayout datosPanelLayout = new javax.swing.GroupLayout(datosPanel);
        datosPanel.setLayout(datosPanelLayout);
        datosPanelLayout.setHorizontalGroup(
            datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datosPanelLayout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(4, 4, 4)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(datosPanelLayout.createSequentialGroup()
                        .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cuitText)
                            .addComponent(razonSocialText)
                            .addComponent(empresaText, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 127, Short.MAX_VALUE)
                        .addComponent(limpiarDatosEntityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(direccionText, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );
        datosPanelLayout.setVerticalGroup(
            datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(empresaText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(limpiarDatosEntityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(razonSocialText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cuitText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(direccionText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Empresa", datosPanel);

        datosProceso.setName("datosProceso"); // NOI18N

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Configuraci贸n Proceso"));
        jPanel4.setName("jPanel4"); // NOI18N

        automaticoCheckBox.setText("Funcionamiento Autom谩tico");
        automaticoCheckBox.setName("automaticoCheckBox"); // NOI18N

        jLabel10.setText("Reintentos Reconexi贸n:");
        jLabel10.setName("jLabel10"); // NOI18N

        reintentosReconexionTextField.setName("reintentosReconexionTextField"); // NOI18N

        jLabel11.setText("Segundos Reconexi贸n:");
        jLabel11.setName("jLabel11"); // NOI18N

        segundosReconexionTextField.setName("segundosReconexionTextField"); // NOI18N

        jLabel12.setText("Mostrar Alarma:");
        jLabel12.setName("jLabel12"); // NOI18N

        mostrarAlarmaTextField.setName("mostrarAlarmaTextField"); // NOI18N

        jLabel13.setText("Minutos a Predecir:");
        jLabel13.setName("jLabel13"); // NOI18N

        minutosPredecirTextField.setName("minutosPredecirTextField"); // NOI18N

        jLabel14.setText("Verificar Procesos Detener:");
        jLabel14.setName("jLabel14"); // NOI18N

        jLabel15.setText("Verificar Remontaje:");
        jLabel15.setName("jLabel15"); // NOI18N

        verificarProcesosTextField.setName("verificarProcesosTextField"); // NOI18N

        verificarRemontajeTextField.setName("verificarRemontajeTextField"); // NOI18N

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(segundosReconexionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                        .addComponent(jLabel14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(mostrarAlarmaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(jLabel15))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(reintentosReconexionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(minutosPredecirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verificarProcesosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verificarRemontajeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(automaticoCheckBox)
                .addContainerGap(367, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(automaticoCheckBox)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(reintentosReconexionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(minutosPredecirTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(segundosReconexionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(verificarProcesosTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel15)
                    .addComponent(mostrarAlarmaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(verificarRemontajeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout datosProcesoLayout = new javax.swing.GroupLayout(datosProceso);
        datosProceso.setLayout(datosProcesoLayout);
        datosProcesoLayout.setHorizontalGroup(
            datosProcesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosProcesoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        datosProcesoLayout.setVerticalGroup(
            datosProcesoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosProcesoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Proceso", datosProceso);

        guardarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/guardar.png"))); // NOI18N
        guardarButton.setText("Guardar");
        guardarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        guardarButton.setName("guardarButton"); // NOI18N
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Configuraci贸n General", jPanel1);

        jPanel2.setName("jPanel2"); // NOI18N

        tanqueComboBox.setModel(modelTanque);
        tanqueComboBox.setName("tanqueComboBox"); // NOI18N
        tanqueComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tanqueComboBoxItemStateChanged(evt);
            }
        });

        jLabel1.setText("Tanque:");
        jLabel1.setName("jLabel1"); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Configuraci贸n Predicci贸n"));
        jPanel3.setName("jPanel3"); // NOI18N

        jLabel3.setText("Alfa:");
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText("Beta:");
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText("Promedio Anterior:");
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel9.setText("Tendencia Anterior:");
        jLabel9.setName("jLabel9"); // NOI18N

        betaTextField.setName("betaTextField"); // NOI18N

        alfaTextField.setName("alfaTextField"); // NOI18N

        promAnteriorTextField.setName("promAnteriorTextField"); // NOI18N

        tenAnteriorTextField.setName("tenAnteriorTextField"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(alfaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(promAnteriorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(betaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tenAnteriorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(betaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alfaTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel9)
                    .addComponent(promAnteriorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tenAnteriorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        guardarEstadoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/guardar.png"))); // NOI18N
        guardarEstadoButton.setText("Guardar");
        guardarEstadoButton.setName("guardarEstadoButton"); // NOI18N
        guardarEstadoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarEstadoButtonActionPerformed(evt);
            }
        });

        porDefectoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/defecto.png"))); // NOI18N
        porDefectoButton.setText("Por Defecto");
        porDefectoButton.setName("porDefectoButton"); // NOI18N
        porDefectoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                porDefectoButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(guardarEstadoButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(porDefectoButton))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(tanqueComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(117, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tanqueComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(33, 33, 33)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(porDefectoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardarEstadoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Predicci贸n por Tanque", jPanel2);

        salirButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/cerrar.png"))); // NOI18N
        salirButton.setText("Cerrar");
        salirButton.setName("salirButton"); // NOI18N
        salirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 609, Short.MAX_VALUE))
                    .addComponent(salirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(salirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
        System.gc();//recolecta la basura
        reset();
    }//GEN-LAST:event_salirButtonActionPerformed

    private void guardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar
        guardar();
    }//GEN-LAST:event_guardar

    private void limpiarDatosEntityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarDatosEntityButtonActionPerformed
        empresaText.setText("");
        razonSocialText.setText("");
        cuitText.setText("");
        direccionText.setText("");
        automaticoCheckBox.setSelected(false);
        reintentosReconexionTextField.setText("");
        segundosReconexionTextField.setText("");
        mostrarAlarmaTextField.setText("");
        minutosPredecirTextField.setText("");
        verificarProcesosTextField.setText("");
        verificarRemontajeTextField.setText("");
    }//GEN-LAST:event_limpiarDatosEntityButtonActionPerformed

    private void tanqueComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tanqueComboBoxItemStateChanged
        if (modelTanque.getSelectedEntity() != null) {
            mostrarEstadoPrediccion(modelTanque.getSelectedEntity());
        }
    }//GEN-LAST:event_tanqueComboBoxItemStateChanged

    private void porDefectoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_porDefectoButtonActionPerformed
        if (modelTanque.getSelectedEntity() != null) {
            mostrarEstadoPorDefecto();
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un Tanque");
            porDefectoButton.setEnabled(false);
            cleanDatosEstado();
        }
    }//GEN-LAST:event_porDefectoButtonActionPerformed

    private void guardarEstadoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarEstadoButtonActionPerformed
        if (modelTanque.getSelectedEntity() != null) {
            guardarEstado(modelTanque.getSelectedEntity());
        } else {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un Tanque");
            guardarEstadoButton.setEnabled(false);
            cleanDatosEstado();
        }
    }//GEN-LAST:event_guardarEstadoButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alfaTextField;
    private javax.swing.JCheckBox automaticoCheckBox;
    private javax.swing.JTextField betaTextField;
    private javax.swing.JTextField cuitText;
    private javax.swing.JPanel datosPanel;
    private javax.swing.JPanel datosProceso;
    private javax.swing.JTextField direccionText;
    private javax.swing.JTextField empresaText;
    private javax.swing.JButton guardarButton;
    private javax.swing.JButton guardarEstadoButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JButton limpiarDatosEntityButton;
    private javax.swing.JTextField minutosPredecirTextField;
    private javax.swing.JTextField mostrarAlarmaTextField;
    private javax.swing.JButton porDefectoButton;
    private javax.swing.JTextField promAnteriorTextField;
    private javax.swing.JTextField razonSocialText;
    private javax.swing.JTextField reintentosReconexionTextField;
    private javax.swing.JButton salirButton;
    private javax.swing.JTextField segundosReconexionTextField;
    private javax.swing.JComboBox tanqueComboBox;
    private javax.swing.JTextField tenAnteriorTextField;
    private javax.swing.JTextField verificarProcesosTextField;
    private javax.swing.JTextField verificarRemontajeTextField;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void guardar() {

        boolean automatico = getEntity().getFuncionamientoAutomatico().booleanValue();

        if (!Utiles.verificarCuit(cuitText.getText())) {
            JOptionPane.showMessageDialog(this, "CUIT con formato incorrecto.", "Error de validaci贸n", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try{
            new Integer(reintentosReconexionTextField.getText());
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "El formato de reintentos de reconexi贸n no tiene un formato num茅rico","Error de formato",JOptionPane.ERROR_MESSAGE);
            return;
        }
        try{
            new Integer(segundosReconexionTextField.getText());
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "El formato de segundos para la reconexi贸n no tiene un formato num茅rico","Error de formato",JOptionPane.ERROR_MESSAGE);
            return;
        }
        try{
            new Integer(mostrarAlarmaTextField.getText());
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "El formato de mostrar alarma no tiene un formato num茅rico","Error de formato",JOptionPane.ERROR_MESSAGE);
            return;
        }
        try{
            new Integer(minutosPredecirTextField.getText());
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "El formato de minutos a predecir no tiene un formato num茅rico","Error de formato",JOptionPane.ERROR_MESSAGE);
            return;
        }
        try{
            new Integer(verificarProcesosTextField.getText());
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "El formato de verificar procesos a detener no tiene un formato num茅rico","Error de formato",JOptionPane.ERROR_MESSAGE);
            return;
        }
        try{
            new Integer(verificarRemontajeTextField.getText());
        }catch(NumberFormatException ex){
            JOptionPane.showMessageDialog(this, "El formato de verificar remontaje no tiene un formato num茅rico","Error de formato",JOptionPane.ERROR_MESSAGE);
            return;
        }

        bindinDataEntity(cliente);
        try {
            gestorAbm.valid();
            //Antes era autom谩tico y ahora es manual, mostrar advertencia
            if (automatico && !getEntity().getFuncionamientoAutomatico().booleanValue()) {
                int respuesta = JOptionPane.showConfirmDialog(this, "Est谩 seguro que desea que el control sea manual?",
                        "Confirmar Manual", JOptionPane.OK_CANCEL_OPTION);
                if (respuesta == JOptionPane.OK_OPTION) {
                    gestorAbm.guardar();
                    reset();
                }
            } else {
                gestorAbm.guardar();
                reset();
            }

        } catch (ValidateException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void reset() {
        empresaText.setText("");
        razonSocialText.setText("");
        cuitText.setText("");
        direccionText.setText("");
        automaticoCheckBox.setSelected(false);
        reintentosReconexionTextField.setText("");
        segundosReconexionTextField.setText("");
        mostrarAlarmaTextField.setText("");
        minutosPredecirTextField.setText("");
        verificarProcesosTextField.setText("");
        verificarRemontajeTextField.setText("");
        setEntity(null);
        habilitarPanelDatos(false);
        this.setVisible(false);
    }

    public ConfiguracionSistemaAbm getGestorAbm() {
        return gestorAbm;
    }

    public void setGestorAbm(ConfiguracionSistemaAbm gestorAbm) {
        this.gestorAbm = gestorAbm;
    }

    public ConfiguracionSistema getEntity() {
        return gestorAbm.getEntity();
    }

    public void setEntity(ConfiguracionSistema entity) {
        this.gestorAbm.setEntity(entity);
    }

    private void habilitarPanelDatos(boolean habilitar) {
        empresaText.setEnabled(habilitar);
        razonSocialText.setEnabled(habilitar);
        cuitText.setEnabled(habilitar);
        direccionText.setEnabled(habilitar);
        automaticoCheckBox.setEnabled(habilitar);
        guardarButton.setEnabled(habilitar);
        limpiarDatosEntityButton.setEnabled(habilitar);
    }
    private final int cliente = 0;
    private final int servidor = 1;

    public void bindinDataEntity(int fuente) {
        if (fuente == servidor) {
            empresaText.setText(getEntity().getEmpresa());
            razonSocialText.setText(getEntity().getRazonSocial());
            cuitText.setText(getEntity().getCuit());
            direccionText.setText(getEntity().getDireccion());
            automaticoCheckBox.setSelected(getEntity().getFuncionamientoAutomatico());
            if(getEntity().getReitentosReconexion()!=null)reintentosReconexionTextField.setText(getEntity().getReitentosReconexion().toString());
            if(getEntity().getSegundosReconexion()!=null)segundosReconexionTextField.setText(getEntity().getSegundosReconexion().toString());
            if(getEntity().getMostrarAlarma()!=null)mostrarAlarmaTextField.setText(getEntity().getMostrarAlarma().toString());
            if(getEntity().getMinutosPredecir()!=null)minutosPredecirTextField.setText(getEntity().getMinutosPredecir().toString());
            if(getEntity().getVerificarProcesosDetener()!=null)verificarProcesosTextField.setText(getEntity().getVerificarProcesosDetener().toString());
            if(getEntity().getVerificarRemontaje()!=null)verificarRemontajeTextField.setText(getEntity().getVerificarRemontaje().toString());
        } else if (fuente == cliente) {
            getEntity().setEmpresa(empresaText.getText());
            getEntity().setRazonSocial(razonSocialText.getText());
            getEntity().setCuit(cuitText.getText());
            getEntity().setDireccion(direccionText.getText());
            getEntity().setFuncionamientoAutomatico(automaticoCheckBox.isSelected());
            getEntity().setReitentosReconexion(new Integer(reintentosReconexionTextField.getText()));
            getEntity().setSegundosReconexion(new Integer(segundosReconexionTextField.getText()));
            getEntity().setMostrarAlarma(new Integer(mostrarAlarmaTextField.getText()));
            getEntity().setMinutosPredecir(new Integer(minutosPredecirTextField.getText()));
            getEntity().setVerificarProcesosDetener(new Integer(verificarProcesosTextField.getText()));
            getEntity().setVerificarRemontaje(new Integer(verificarRemontajeTextField.getText()));
        }

    }

    private List<Tanque> buscarTodosTanques() {
        return gestorAbm.buscarTodosTanques();
    }

    private void mostrarEstadoPrediccion(Tanque tanque) {
        if (tanque.getEstadoPrediccionTendencia() != null) {
            EstadoPrediccionTendencia estado = tanque.getEstadoPrediccionTendencia();
            alfaTextField.setText(estado.getAlfaTendencia().toString());
            betaTextField.setText(estado.getBetaTendencia().toString());
            promAnteriorTextField.setText(estado.getPromTendencia().toString());
            tenAnteriorTextField.setText(estado.getTenTendencia().toString());
        } else {
            //Estado por defecto
            mostrarEstadoPorDefecto();
        }
    }

    private void mostrarEstadoPorDefecto() {
        EstadoPrediccion estado;
        try {
            estado = gestorAbm.buscarEstadoPrediccion();
            alfaTextField.setText(estado.getAlfaTendencia().toString());
            betaTextField.setText(estado.getBetaTendencia().toString());
            promAnteriorTextField.setText(estado.getPromTendencia().toString());
            tenAnteriorTextField.setText(estado.getTenTendencia().toString());
        } catch (PersistException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al mostrar el estado por defecto", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void guardarEstado(Tanque tanque) {
        boolean usado = GestorGeneralEstado.getInstance().isTanqueUsado(tanque);
        if( usado ){
            JOptionPane.showMessageDialog(this, "El tanque esta siendo usado en el control de " +
                    "procesos, no se puede modificar.", "Informaci贸n", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        try {
            EstadoPrediccionTendencia estado = tanque.getEstadoPrediccionTendencia();
            if (estado == null) {
                estado = new EstadoPrediccionTendencia();
                tanque.setEstadoPrediccionTendencia(estado);
            }
            estado.setAlfaTendencia(Double.valueOf(alfaTextField.getText()));
            estado.setBetaTendencia(Double.valueOf(betaTextField.getText()));
            estado.setPromTendencia(Double.valueOf(promAnteriorTextField.getText()));
            estado.setTenTendencia(Double.valueOf(tenAnteriorTextField.getText()));

            gestorAbm.validEstado(estado);
            gestorAbm.guardarTanque(tanque);
            JOptionPane.showMessageDialog(this, "Se ha guardado exitosamente");
        } catch (ValidateException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void cleanDatosEstado() {
        alfaTextField.setText("");
        betaTextField.setText("");
        promAnteriorTextField.setText("");
        tenAnteriorTextField.setText("");
    }
}
