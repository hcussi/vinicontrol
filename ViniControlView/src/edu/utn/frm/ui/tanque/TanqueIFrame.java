/*
 * TanqueIFrame.java
 *
 * Created on 04/08/2009, 17:09:11
 */
package edu.utn.frm.ui.tanque;

import edu.utn.frm.action.comunicacion.GestorGeneralEstado;
import edu.utn.frm.action.exception.ReporteException;
import edu.utn.frm.action.tanque.TanqueAbm;
import edu.utn.frm.dao.generic.ValidateException;
import edu.utn.frm.entities.comunicacion.BitParada;
import edu.utn.frm.entities.comunicacion.ConexionIP;
import edu.utn.frm.entities.comunicacion.ConexionSerie;
import edu.utn.frm.entities.comunicacion.Paridad;
import edu.utn.frm.entities.regla.ReglaControl;
import edu.utn.frm.entities.tanque.GrupoTanque;
import edu.utn.frm.entities.tanque.Tanque;
import edu.utn.frm.ui.IconManager;
import edu.utn.frm.ui.utils.GenericComboBoxModel;
import javax.swing.JOptionPane;


import edu.utn.frm.ui.utils.GenericTableModel;
import edu.utn.frm.ui.utils.Utiles;
import java.util.Arrays;
import java.util.List;

/**
 *
 * @author Proyecto
 */
public class TanqueIFrame extends javax.swing.JInternalFrame {

    private GenericTableModel<Tanque> model = new GenericTableModel<Tanque>(
            new String[]{"Código", "Descripción", "Capacidad", "Grupo Tanque"},
            new String[]{"codigo", "descripcion", "capacidad", "grupoTanque.nombre"});
    private TanqueAbm gestorAbm = new TanqueAbm();
    private GenericComboBoxModel<ReglaControl> modelReglaControl = new GenericComboBoxModel<ReglaControl>(
            buscarTodosReglaControl(), "descripcion", true);
    private GenericComboBoxModel<ConexionIP> modelConexionIP = new GenericComboBoxModel<ConexionIP>(
            buscarTodosConexionIP(), "descripcion", true);
    private GenericComboBoxModel<ConexionSerie> modelConexionSerie = new GenericComboBoxModel<ConexionSerie>(
            buscarTodosConexionSerie(), "descripcion", true);
    private GenericComboBoxModel<GrupoTanque> modelGrupoTanque = new GenericComboBoxModel<GrupoTanque>(
            buscarTodosGruposTanque(), "nombre", true);
    private GenericComboBoxModel<Paridad> modelParidad =
            new GenericComboBoxModel(buscarParidades(), "descripcion");
    private GenericComboBoxModel<BitParada> modelBitParada =
            new GenericComboBoxModel(buscarBitParada(), "descripcion");

    /** Creates new form TanqueIFrame */
    public TanqueIFrame() {
        initComponents();
        habilitarPanelDatos(false);
        model.setRows(gestorAbm.buscar());
        this.setFrameIcon(IconManager.getInstance().getFrameIcon());
        //sPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(" Giros Comerciales [" + model.getRowCount() + "] "));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        datosDialog = new javax.swing.JDialog();
        datosPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        codigoText = new javax.swing.JTextField();
        capacidadText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        descripcionText = new javax.swing.JTextField();
        limpiarDatosEntityButton = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        reglaControlComboBox = new javax.swing.JComboBox();
        grupoTanqueComboBox = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        usarConexionIPCheckBox = new javax.swing.JCheckBox();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        conexionIPComboBox = new javax.swing.JComboBox();
        datosPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        codigoIPText = new javax.swing.JTextField();
        ipText = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        descripcionIPText = new javax.swing.JTextField();
        puertoIPText = new javax.swing.JTextField();
        estadoIPCheckBox = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();
        puertoRemotoIPText = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        conexionSerieComboBox = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        nombrePuertoText = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        estadoCheckBox = new javax.swing.JCheckBox();
        descripcionText1 = new javax.swing.JTextField();
        codigoText1 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        ratioBaudioText = new javax.swing.JTextField();
        timeOutText = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        reintentosText = new javax.swing.JTextField();
        bitParadaComboBox = new javax.swing.JComboBox();
        paridadComboBox = new javax.swing.JComboBox();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        cerrarButton = new javax.swing.JButton();
        guardarButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        sPanel = new javax.swing.JScrollPane();
        buscarTabla = new javax.swing.JTable();
        salirButton = new javax.swing.JButton();
        buscarCodigoText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        buscarButton = new javax.swing.JButton();
        limpiarBuscadorButton = new javax.swing.JButton();
        nuevoButton = new javax.swing.JButton();
        editarButton = new javax.swing.JButton();
        buscarDescripcionText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        copiarButton = new javax.swing.JButton();
        generarInformeButton1 = new javax.swing.JButton();

        datosDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        datosDialog.setTitle("Tanque");
        datosDialog.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        datosDialog.setLocationByPlatform(true);
        datosDialog.setMinimumSize(new java.awt.Dimension(560, 475));
        datosDialog.setModal(true);
        datosDialog.setName("datosDialog"); // NOI18N
        datosDialog.setResizable(false);
        datosDialog.addWindowListener(new java.awt.event.WindowAdapter() {

            public void windowClosed(java.awt.event.WindowEvent evt) {
                datosDialog_windowClosed(evt);
            }
        });

        datosPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Tanque"));
        datosPanel1.setName("datosPanel1"); // NOI18N

        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel2.setText("Código:");
        jLabel2.setName("jLabel2"); // NOI18N

        codigoText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        codigoText.setName("txtTPatente"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${entity.codigo}"), codigoText, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        capacidadText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        capacidadText.setName("txtTCapacidad"); // NOI18N

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${entity.detalle}"), capacidadText, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel6.setText("Capacidad:");
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setText("Descripción:");
        jLabel7.setName("jLabel7"); // NOI18N

        descripcionText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        descripcionText.setName("txtTMarca"); // NOI18N

        limpiarDatosEntityButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/limpiar.png"))); // NOI18N
        limpiarDatosEntityButton.setText("Limpiar");
        limpiarDatosEntityButton.setName("limpiarDatosEntityButton"); // NOI18N
        limpiarDatosEntityButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarDatosEntityButtonActionPerformed(evt);
            }
        });

        jLabel8.setText("Litros");
        jLabel8.setName("jLabel8"); // NOI18N

        jLabel9.setText("Regla de Control:");
        jLabel9.setName("jLabel9"); // NOI18N

        reglaControlComboBox.setModel(modelReglaControl);
        reglaControlComboBox.setName("reglaControlComboBox"); // NOI18N

        grupoTanqueComboBox.setModel(modelGrupoTanque);
        grupoTanqueComboBox.setName("grupoTanqueComboBox"); // NOI18N

        jLabel11.setText("Grupo Tanque:");
        jLabel11.setName("jLabel11"); // NOI18N

        usarConexionIPCheckBox.setText("Usar Conexión IP (Si no se selecciona se usará la Conexión Serie)");
        usarConexionIPCheckBox.setName("usarConexionIPCheckBox"); // NOI18N

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        jLabel10.setText("Conexión IP:");
        jLabel10.setName("jLabel10"); // NOI18N

        conexionIPComboBox.setModel(modelConexionIP);
        conexionIPComboBox.setName("conexionIPComboBox"); // NOI18N
        conexionIPComboBox.addItemListener(new java.awt.event.ItemListener() {

            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                conexionIPComboBoxItemStateChanged(evt);
            }
        });

        datosPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Conexión IP"));
        datosPanel2.setName("datosPanel2"); // NOI18N

        jLabel3.setFont(jLabel3.getFont().deriveFont(jLabel3.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel3.setText("Código:");
        jLabel3.setName("jLabel3"); // NOI18N

        codigoIPText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        codigoIPText.setEnabled(false);
        codigoIPText.setName("codigoIPText"); // NOI18N

        ipText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ipText.setEnabled(false);
        ipText.setName("ipText"); // NOI18N

        jLabel13.setText("Dirección IP:");
        jLabel13.setName("jLabel13"); // NOI18N

        jLabel14.setText("Estado:");
        jLabel14.setName("jLabel14"); // NOI18N

        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel4.setText("Puerto:");
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel15.setFont(jLabel15.getFont().deriveFont(jLabel15.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel15.setText("Descripción:");
        jLabel15.setName("jLabel15"); // NOI18N

        descripcionIPText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        descripcionIPText.setEnabled(false);
        descripcionIPText.setName("descripcionIPText"); // NOI18N

        puertoIPText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        puertoIPText.setEnabled(false);
        puertoIPText.setName("puertoIPText"); // NOI18N

        estadoIPCheckBox.setEnabled(false);
        estadoIPCheckBox.setMargin(new java.awt.Insets(2, 2, -1, 2));
        estadoIPCheckBox.setName("estadoIPCheckBox"); // NOI18N

        jLabel16.setFont(jLabel16.getFont().deriveFont(jLabel16.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel16.setText("Puerto Remoto:");
        jLabel16.setName("jLabel16"); // NOI18N

        puertoRemotoIPText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        puertoRemotoIPText.setEnabled(false);
        puertoRemotoIPText.setName("puertoRemotoIPText"); // NOI18N

        javax.swing.GroupLayout datosPanel2Layout = new javax.swing.GroupLayout(datosPanel2);
        datosPanel2.setLayout(datosPanel2Layout);
        datosPanel2Layout.setHorizontalGroup(
                datosPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosPanel2Layout.createSequentialGroup().addGap(13, 13, 13).addGroup(datosPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel15).addComponent(jLabel3).addComponent(jLabel13)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false).addComponent(descripcionIPText).addComponent(codigoIPText, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE).addComponent(ipText)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(datosPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosPanel2Layout.createSequentialGroup().addComponent(jLabel14).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(estadoIPCheckBox)).addGroup(datosPanel2Layout.createSequentialGroup().addComponent(jLabel4).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(puertoIPText, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel16).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(puertoRemotoIPText, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))).addGap(36, 36, 36)));
        datosPanel2Layout.setVerticalGroup(
                datosPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosPanel2Layout.createSequentialGroup().addContainerGap().addGroup(datosPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(estadoIPCheckBox, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING).addComponent(codigoIPText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel15).addComponent(descripcionIPText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(ipText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel13).addComponent(puertoIPText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel4).addComponent(jLabel16).addComponent(puertoRemotoIPText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addComponent(jLabel10).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(conexionIPComboBox, 0, 166, Short.MAX_VALUE).addGap(277, 277, 277)).addGroup(jPanel1Layout.createSequentialGroup().addComponent(datosPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 479, Short.MAX_VALUE).addGap(30, 30, 30)))));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel1Layout.createSequentialGroup().addContainerGap().addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(conexionIPComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel10)).addGap(18, 18, 18).addComponent(datosPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(25, Short.MAX_VALUE)));

        jTabbedPane1.addTab("Conexión IP", jPanel1);

        jPanel2.setName("jPanel2"); // NOI18N

        jLabel12.setText("Conexión Serie:");
        jLabel12.setName("jLabel12"); // NOI18N

        conexionSerieComboBox.setModel(modelConexionSerie);
        conexionSerieComboBox.setName("conexionSerieComboBox"); // NOI18N
        conexionSerieComboBox.addItemListener(new java.awt.event.ItemListener() {

            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                conexionSerieComboBoxItemStateChanged(evt);
            }
        });

        jLabel17.setText("Nombre de Puerto:");
        jLabel17.setName("jLabel17"); // NOI18N

        nombrePuertoText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        nombrePuertoText.setEnabled(false);
        nombrePuertoText.setName("nombrePuertoText"); // NOI18N

        jLabel18.setText("Estado:");
        jLabel18.setName("jLabel18"); // NOI18N

        estadoCheckBox.setEnabled(false);
        estadoCheckBox.setMargin(new java.awt.Insets(2, 2, -1, 2));
        estadoCheckBox.setName("estadoCheckBox"); // NOI18N

        descripcionText1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        descripcionText1.setEnabled(false);
        descripcionText1.setName("descripcionText1"); // NOI18N

        codigoText1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        codigoText1.setEnabled(false);
        codigoText1.setName("codigoText1"); // NOI18N

        jLabel19.setFont(jLabel19.getFont().deriveFont(jLabel19.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel19.setText("Código:");
        jLabel19.setName("jLabel19"); // NOI18N

        jLabel20.setFont(jLabel20.getFont().deriveFont(jLabel20.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel20.setText("Velocidad (baudios):");
        jLabel20.setName("jLabel20"); // NOI18N

        ratioBaudioText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        ratioBaudioText.setEnabled(false);
        ratioBaudioText.setName("ratioBaudioText"); // NOI18N

        timeOutText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        timeOutText.setEnabled(false);
        timeOutText.setName("timeOutText"); // NOI18N

        jLabel21.setFont(jLabel21.getFont().deriveFont(jLabel21.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel21.setText("Time Out:");
        jLabel21.setName("jLabel21"); // NOI18N

        jLabel22.setFont(jLabel22.getFont().deriveFont(jLabel22.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel22.setText("Reintentos:");
        jLabel22.setName("jLabel22"); // NOI18N

        reintentosText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        reintentosText.setEnabled(false);
        reintentosText.setName("reintentosText"); // NOI18N

        bitParadaComboBox.setModel(modelBitParada);
        bitParadaComboBox.setEnabled(false);
        bitParadaComboBox.setName("bitParadaComboBox"); // NOI18N

        paridadComboBox.setModel(modelParidad);
        paridadComboBox.setEnabled(false);
        paridadComboBox.setName("paridadComboBox"); // NOI18N

        jLabel23.setFont(jLabel23.getFont().deriveFont(jLabel23.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel23.setText("Paridad:");
        jLabel23.setName("jLabel23"); // NOI18N

        jLabel24.setFont(jLabel24.getFont().deriveFont(jLabel24.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel24.setText("Bit de parada:");
        jLabel24.setName("jLabel24"); // NOI18N

        jLabel25.setFont(jLabel25.getFont().deriveFont(jLabel25.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel25.setText("Descripción:");
        jLabel25.setName("jLabel25"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel12).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(conexionSerieComboBox, 0, 166, Short.MAX_VALUE).addGap(263, 263, 263)).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel17).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)).addComponent(jLabel19).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel20).addComponent(jLabel21).addComponent(jLabel22)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addComponent(nombrePuertoText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(18, 18, 18).addComponent(jLabel18).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(estadoCheckBox)).addGroup(jPanel2Layout.createSequentialGroup().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(timeOutText, javax.swing.GroupLayout.Alignment.LEADING).addComponent(ratioBaudioText, javax.swing.GroupLayout.Alignment.LEADING).addComponent(codigoText1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE).addComponent(reintentosText)).addGap(22, 22, 22).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel24).addComponent(jLabel23).addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel25).addGap(3, 3, 3))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(descripcionText1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(paridadComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(bitParadaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))).addContainerGap(123, Short.MAX_VALUE)))));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addContainerGap().addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(conexionSerieComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel12)).addGap(18, 18, 18).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel17).addComponent(nombrePuertoText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel18)).addComponent(estadoCheckBox)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(codigoText1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel19).addComponent(descripcionText1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel25)).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(jPanel2Layout.createSequentialGroup().addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(ratioBaudioText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel20)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(timeOutText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel21).addComponent(jLabel24).addComponent(bitParadaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))).addGroup(jPanel2Layout.createSequentialGroup().addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(paridadComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel23)))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel22).addComponent(reintentosText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(20, Short.MAX_VALUE)));

        jTabbedPane1.addTab("Conexión Serie", jPanel2);

        javax.swing.GroupLayout datosPanel1Layout = new javax.swing.GroupLayout(datosPanel1);
        datosPanel1.setLayout(datosPanel1Layout);
        datosPanel1Layout.setHorizontalGroup(
                datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosPanel1Layout.createSequentialGroup().addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosPanel1Layout.createSequentialGroup().addGap(22, 22, 22).addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel6).addComponent(jLabel2).addComponent(jLabel11))).addGroup(datosPanel1Layout.createSequentialGroup().addContainerGap().addComponent(jLabel9))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(reglaControlComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, 144, Short.MAX_VALUE).addComponent(grupoTanqueComboBox, javax.swing.GroupLayout.Alignment.TRAILING, 0, 144, Short.MAX_VALUE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel8).addGap(252, 252, 252)).addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING).addGroup(datosPanel1Layout.createSequentialGroup().addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addGroup(javax.swing.GroupLayout.Alignment.LEADING, datosPanel1Layout.createSequentialGroup().addGap(98, 98, 98).addComponent(usarConexionIPCheckBox, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, datosPanel1Layout.createSequentialGroup().addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(datosPanel1Layout.createSequentialGroup().addContainerGap().addComponent(capacidadText, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.LEADING, datosPanel1Layout.createSequentialGroup().addGap(98, 98, 98).addComponent(codigoText, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel7).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(descripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(6, 6, 6).addComponent(limpiarDatosEntityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))).addContainerGap()));
        datosPanel1Layout.setVerticalGroup(
                datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosPanel1Layout.createSequentialGroup().addContainerGap().addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(codigoText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel2).addComponent(jLabel7).addComponent(descripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(limpiarDatosEntityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(capacidadText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel6).addComponent(jLabel8)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(grupoTanqueComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel11)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel9).addComponent(reglaControlComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(usarConexionIPCheckBox).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)));

        cerrarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/cerrar.png"))); // NOI18N
        cerrarButton.setText("Cerrar");
        cerrarButton.setName("cerrarButton"); // NOI18N
        cerrarButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarButtonActionPerformed(evt);
            }
        });

        guardarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/guardar.png"))); // NOI18N
        guardarButton.setText("Guardar");
        guardarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        guardarButton.setName("guardarButton"); // NOI18N
        guardarButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar(evt);
            }
        });

        eliminarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/eliminar.png"))); // NOI18N
        eliminarButton.setText("Eliminar");
        eliminarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        eliminarButton.setName("eliminarButton"); // NOI18N
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar(evt);
            }
        });

        javax.swing.GroupLayout datosDialogLayout = new javax.swing.GroupLayout(datosDialog.getContentPane());
        datosDialog.getContentPane().setLayout(datosDialogLayout);
        datosDialogLayout.setHorizontalGroup(
                datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(datosDialogLayout.createSequentialGroup().addContainerGap().addGroup(datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(datosPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addGroup(datosDialogLayout.createSequentialGroup().addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(eliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 260, Short.MAX_VALUE).addComponent(cerrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))).addContainerGap()));
        datosDialogLayout.setVerticalGroup(
                datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, datosDialogLayout.createSequentialGroup().addContainerGap().addComponent(datosPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(datosDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(cerrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(eliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap()));

        setIconifiable(true);
        setTitle("Tanque");

        sPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Tanques"));
        sPanel.setName("sPanel"); // NOI18N

        buscarTabla.setAutoCreateRowSorter(true);
        buscarTabla.setModel(model);
        buscarTabla.setName("buscarTable"); // NOI18N
        buscarTabla.addMouseListener(new java.awt.event.MouseAdapter() {

            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscarTablaMouseClicked(evt);
            }
        });
        sPanel.setViewportView(buscarTabla);

        salirButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/cerrar.png"))); // NOI18N
        salirButton.setText("Cerrar");
        salirButton.setName("salirButton"); // NOI18N
        salirButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirButtonActionPerformed(evt);
            }
        });

        buscarCodigoText.setName("buscarCodigoText"); // NOI18N

        jLabel1.setText("Descripción");
        jLabel1.setName("jLabel1"); // NOI18N

        buscarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/buscar.png"))); // NOI18N
        buscarButton.setText("Buscar");
        buscarButton.setName("buscarButton"); // NOI18N
        buscarButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });

        limpiarBuscadorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/limpiar.png"))); // NOI18N
        limpiarBuscadorButton.setText("Limpiar");
        limpiarBuscadorButton.setName("limpiarBuscarButton"); // NOI18N
        limpiarBuscadorButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarBuscadorButtonActionPerformed(evt);
            }
        });

        nuevoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/agregar.png"))); // NOI18N
        nuevoButton.setText("Nuevo");
        nuevoButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        nuevoButton.setName("nuevoButton"); // NOI18N
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevo(evt);
            }
        });

        editarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/editar.png"))); // NOI18N
        editarButton.setText("Editar");
        editarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        editarButton.setName("editarButton"); // NOI18N
        editarButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarButtonnuevo(evt);
            }
        });

        buscarDescripcionText.setName("buscarDescripcionText"); // NOI18N

        jLabel5.setText("Código");
        jLabel5.setName("jLabel5"); // NOI18N

        copiarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/copiar.png"))); // NOI18N
        copiarButton.setText("Copiar");
        copiarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        copiarButton.setName("copiarButton"); // NOI18N
        copiarButton.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copiarButton(evt);
            }
        });

        generarInformeButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/informe.png"))); // NOI18N
        generarInformeButton1.setText("Generar Informe");
        generarInformeButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        generarInformeButton1.setName("generarInformeButton1"); // NOI18N
        generarInformeButton1.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarInformeButton1(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(sPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)).addGroup(layout.createSequentialGroup().addContainerGap().addComponent(nuevoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(editarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(copiarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(generarInformeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE).addComponent(salirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGap(13, 13, 13).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(buscarCodigoText, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel5)).addGap(10, 10, 10).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(buscarDescripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel1)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(buscarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE).addComponent(limpiarBuscadorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))).addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup().addGap(32, 32, 32).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jLabel5)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(buscarCodigoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(buscarDescripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))).addComponent(limpiarBuscadorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(buscarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(sPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(nuevoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(salirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(editarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(copiarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(generarInformeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap()));

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuevo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevo
        nuevo();
    }//GEN-LAST:event_nuevo

    private void buscarTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarTablaMouseClicked
        if (evt.getClickCount() > 1) {
            editar();
        }
    }//GEN-LAST:event_buscarTablaMouseClicked

    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
        dispose();
    }//GEN-LAST:event_salirButtonActionPerformed

    private void guardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar
        guardar();
    }//GEN-LAST:event_guardar

    private void eliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar

        eliminar();
    }//GEN-LAST:event_eliminar

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
        gestorAbm.getFilter().setCodigo(buscarCodigoText.getText());
        gestorAbm.getFilter().setDescripcion(buscarDescripcionText.getText());
        model.setRows(gestorAbm.buscar());
    }//GEN-LAST:event_buscarButtonActionPerformed

    private void limpiarBuscadorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarBuscadorButtonActionPerformed
        buscarCodigoText.setText("");
        buscarDescripcionText.setText("");
        gestorAbm.getFilter().clear();
    }//GEN-LAST:event_limpiarBuscadorButtonActionPerformed

    private void limpiarDatosEntityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarDatosEntityButtonActionPerformed
        codigoText.setText("");
        capacidadText.setText("");
        descripcionText.setText("");
        modelReglaControl.setSelectedEntity(null);
        modelGrupoTanque.setSelectedEntity(null);
        modelConexionIP.setSelectedEntity(null);
        modelConexionSerie.setSelectedEntity(null);
        usarConexionIPCheckBox.setSelected(false);
    }//GEN-LAST:event_limpiarDatosEntityButtonActionPerformed

    private void cerrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarButtonActionPerformed
        cerrar();
    }//GEN-LAST:event_cerrarButtonActionPerformed

    private void datosDialog_windowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_datosDialog_windowClosed
        cerrar();
    }//GEN-LAST:event_datosDialog_windowClosed

    private void editarButtonnuevo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarButtonnuevo
        editar();
    }//GEN-LAST:event_editarButtonnuevo

    private void conexionIPComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_conexionIPComboBoxItemStateChanged
        mostrarConexionIP();
    }//GEN-LAST:event_conexionIPComboBoxItemStateChanged

    private void conexionSerieComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_conexionSerieComboBoxItemStateChanged
        mostrarConexionSerie();
    }//GEN-LAST:event_conexionSerieComboBoxItemStateChanged

    private void copiarButton(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copiarButton
        copiar();
    }//GEN-LAST:event_copiarButton

    private void generarInformeButton1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarInformeButton1
        try {
            gestorAbm.ejecutarReporte();
        } catch (ReporteException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al generar el reporte", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_generarInformeButton1
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox bitParadaComboBox;
    private javax.swing.JButton buscarButton;
    private javax.swing.JTextField buscarCodigoText;
    private javax.swing.JTextField buscarDescripcionText;
    private javax.swing.JTable buscarTabla;
    private javax.swing.JTextField capacidadText;
    private javax.swing.JButton cerrarButton;
    private javax.swing.JTextField codigoIPText;
    private javax.swing.JTextField codigoText;
    private javax.swing.JTextField codigoText1;
    private javax.swing.JComboBox conexionIPComboBox;
    private javax.swing.JComboBox conexionSerieComboBox;
    private javax.swing.JButton copiarButton;
    private javax.swing.JDialog datosDialog;
    private javax.swing.JPanel datosPanel1;
    private javax.swing.JPanel datosPanel2;
    private javax.swing.JTextField descripcionIPText;
    private javax.swing.JTextField descripcionText;
    private javax.swing.JTextField descripcionText1;
    private javax.swing.JButton editarButton;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JCheckBox estadoCheckBox;
    private javax.swing.JCheckBox estadoIPCheckBox;
    private javax.swing.JButton generarInformeButton1;
    private javax.swing.JComboBox grupoTanqueComboBox;
    private javax.swing.JButton guardarButton;
    private javax.swing.JTextField ipText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton limpiarBuscadorButton;
    private javax.swing.JButton limpiarDatosEntityButton;
    private javax.swing.JTextField nombrePuertoText;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JComboBox paridadComboBox;
    private javax.swing.JTextField puertoIPText;
    private javax.swing.JTextField puertoRemotoIPText;
    private javax.swing.JTextField ratioBaudioText;
    private javax.swing.JComboBox reglaControlComboBox;
    private javax.swing.JTextField reintentosText;
    private javax.swing.JScrollPane sPanel;
    private javax.swing.JButton salirButton;
    private javax.swing.JTextField timeOutText;
    private javax.swing.JCheckBox usarConexionIPCheckBox;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void cerrar() {
        reset();
        showDatosDialog(false);
    }

    private void nuevo() {
        gestorAbm.nuevo();
        bindinDataEntity(servidor);
        habilitarPanelDatos(true);
        eliminarButton.setEnabled(false);
        showDatosDialog(true);
    }

    private void editar() {
        Tanque tanque = null;

        if (buscarTabla.getSelectedRow() != -1) {
            tanque = model.getRow(buscarTabla.getSelectedRow());
            if (tanque != null) {
                gestorAbm.setEntity(tanque);
                bindinDataEntity(servidor);
                habilitarPanelDatos(true);
                showDatosDialog(true);
            }
        }
        if (tanque == null) {
            JOptionPane.showInternalMessageDialog(this, "Debe seleccionar un Tanque para editar");
        }
    }

    private void copiar() {
        Tanque tanque = null;

        if (buscarTabla.getSelectedRow() != -1) {
            tanque = model.getRow(buscarTabla.getSelectedRow());
            if (tanque != null) {
                gestorAbm.setEntity(tanque);
                try {
                    gestorAbm.copiar();
                    reset();
                    JOptionPane.showMessageDialog(this, "Se ha copiado exitosamente", "Información", JOptionPane.INFORMATION_MESSAGE);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, ex.getMessage());
                }
            }
        }
        if (tanque == null) {
            JOptionPane.showInternalMessageDialog(this, "Debe seleccionar un Tanque para copiar");
        }
    }

    private void guardar() {

        boolean usado = GestorGeneralEstado.getInstance().isTanqueUsado(getEntity());

        if( usado ){
            JOptionPane.showMessageDialog(datosDialog, "El tanque esta siendo usado en el control de " +
                    "procesos, no se puede modificar.", "Información", JOptionPane.INFORMATION_MESSAGE);
            return;
        }

        try {
            new Double(capacidadText.getText());
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(datosDialog, "La capacidad tiene un formato incorrecto.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        bindinDataEntity(cliente);
        try {
            gestorAbm.valid();
            gestorAbm.guardar();
            reset();
            showDatosDialog(false);
        } catch (ValidateException ex) {
            JOptionPane.showMessageDialog(datosDialog, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(datosDialog, ex.getMessage());
        }
    }

    private void showDatosDialog(boolean show) {
        if (show) {
            Utiles.centrarFormulario(datosDialog);
        }
        datosDialog.setVisible(show);
    }

    private void eliminar() {
        Tanque tanque = null;

        try {
            if (buscarTabla.getSelectedRow() != -1) {
                tanque = model.getRow(buscarTabla.getSelectedRow());
                if (tanque != null) {

                    int respuesta = JOptionPane.showConfirmDialog(datosDialog, "Está seguro que desea eliminar el Tanque seleccionado?",
                            "Confirmar Eliminación", JOptionPane.OK_CANCEL_OPTION);

                    if (respuesta == JOptionPane.OK_OPTION) {
                        gestorAbm.setEntity(tanque);
                        gestorAbm.eliminar();
                        reset();
                        showDatosDialog(false);
                    }

                }
            }
            if (tanque == null) {
                JOptionPane.showInternalMessageDialog(datosDialog, "Debe seleccionar un Tanque para eliminar");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void reset() {
        codigoText.setText("");
        capacidadText.setText("");
        descripcionText.setText("");
        modelConexionIP.setSelectedEntity(null);
        modelConexionSerie.setSelectedEntity(null);
        modelReglaControl.setSelectedEntity(null);
        modelGrupoTanque.setSelectedEntity(null);
        usarConexionIPCheckBox.setSelected(false);
        setEntity(null);
        habilitarPanelDatos(false);
        model.setRows(gestorAbm.buscar());
    }

    public TanqueAbm getGestorAbm() {
        return gestorAbm;
    }

    public void setGestorAbm(TanqueAbm gestorAbm) {
        this.gestorAbm = gestorAbm;
    }

    public Tanque getEntity() {
        return gestorAbm.getEntity();
    }

    public void setEntity(Tanque entity) {
        this.gestorAbm.setEntity(entity);
    }

    private void habilitarPanelDatos(boolean habilitar) {
        codigoText.setEnabled(habilitar);
        capacidadText.setEnabled(habilitar);
        descripcionText.setEnabled(habilitar);
        reglaControlComboBox.setEnabled(habilitar);
        grupoTanqueComboBox.setEnabled(habilitar);
        conexionIPComboBox.setEnabled(habilitar);
        conexionSerieComboBox.setEnabled(habilitar);
        usarConexionIPCheckBox.setEnabled(habilitar);
        cerrarButton.setEnabled(habilitar);
        guardarButton.setEnabled(habilitar);
        eliminarButton.setEnabled(habilitar);
        limpiarDatosEntityButton.setEnabled(habilitar);
        nuevoButton.setEnabled(true);
    }
    private final int cliente = 0;
    private final int servidor = 1;

    public void bindinDataEntity(int fuente) {
        if (fuente == servidor) {
            codigoText.setText(getEntity().getCodigo());
            capacidadText.setText(Double.toString(getEntity().getCapacidad()));
            descripcionText.setText(getEntity().getDescripcion());
            usarConexionIPCheckBox.setSelected(getEntity().getUsaConexionIP());
            modelReglaControl.setSelectedEntity(getEntity().getReglaControl());
            modelGrupoTanque.setSelectedEntity(getEntity().getGrupoTanque());
            modelConexionIP.setSelectedEntity(getEntity().getConexionIP());
            modelConexionSerie.setSelectedEntity(getEntity().getConexionSerie());
            if (getEntity().getUsaConexionIP()) {
                mostrarConexionIP();
            } else {
                mostrarConexionSerie();
            }
        } else if (fuente == cliente) {
            getEntity().setCodigo(codigoText.getText());
            getEntity().setDescripcion(descripcionText.getText());
            getEntity().setCapacidad(Double.valueOf(capacidadText.getText()));
            getEntity().setUsaConexionIP(usarConexionIPCheckBox.isSelected());
            getEntity().setReglaControl(modelReglaControl.getSelectedEntity());
            getEntity().setGrupoTanque(modelGrupoTanque.getSelectedEntity());
            getEntity().setConexionIP(modelConexionIP.getSelectedEntity());
            getEntity().setConexionSerie(modelConexionSerie.getSelectedEntity());
            if (getEntity().getUsaConexionIP()) {
                if (getEntity().getConexionIP() == null) {
                    JOptionPane.showMessageDialog(datosDialog, "Va a usar la conexión IP pero no se ha seleccionado ninguna",
                            "Información", JOptionPane.WARNING_MESSAGE);
                }
            } else {
                if (getEntity().getConexionSerie() == null) {
                    JOptionPane.showMessageDialog(datosDialog, "Va a usar la conexión Serie pero no se ha seleccionado ninguna",
                            "Información", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
    }

    public List<ReglaControl> buscarTodosReglaControl() {

        return gestorAbm.buscarTodosReglaControl();
    }

    public List<GrupoTanque> buscarTodosGruposTanque() {

        return gestorAbm.buscarTodosGruposTanque();
    }

    public List<ConexionSerie> buscarTodosConexionSerie() {

        return gestorAbm.buscarTodosConexionSerie();
    }

    public List<ConexionIP> buscarTodosConexionIP() {

        return gestorAbm.buscarTodosConexionIP();
    }

    private void mostrarConexionIP() {
        ConexionIP conexionIP = modelConexionIP.getSelectedEntity();
        if (conexionIP != null) {
            codigoIPText.setText(conexionIP.getCodigo());
            descripcionIPText.setText(conexionIP.getDescripcion());
            estadoIPCheckBox.setSelected(conexionIP.getActiva());
            ipText.setText(conexionIP.getDireccionIPv4());
            puertoIPText.setText(conexionIP.getPuerto().toString());
            puertoRemotoIPText.setText(conexionIP.getPuertoRecepcion().toString());
        } else {
            codigoIPText.setText("");
            descripcionIPText.setText("");
            estadoIPCheckBox.setSelected(false);
            ipText.setText("");
            puertoIPText.setText("");
            puertoRemotoIPText.setText("");
        }
    }

    private void mostrarConexionSerie() {
        ConexionSerie conexionSerie = modelConexionSerie.getSelectedEntity();
        if (conexionSerie != null) {
            nombrePuertoText.setText(conexionSerie.getNombrePuerto());
            estadoCheckBox.setSelected(conexionSerie.getActiva());
            codigoText1.setText(conexionSerie.getCodigo());
            descripcionText1.setText(conexionSerie.getDescripcion());
            ratioBaudioText.setText(conexionSerie.getRatioBaudio().toString());
            timeOutText.setText(conexionSerie.getTimeOut().toString());
            reintentosText.setText(conexionSerie.getReintentos().toString());
            modelBitParada.setSelectedEntity(conexionSerie.getBitParada());
            modelParidad.setSelectedEntity(conexionSerie.getParidad());
        } else {
            nombrePuertoText.setText("");
            estadoCheckBox.setSelected(false);
            codigoText1.setText("");
            descripcionText1.setText("");
            ratioBaudioText.setText("");
            timeOutText.setText("");
            reintentosText.setText("");
            modelBitParada.setSelectedEntity(null);
            modelParidad.setSelectedEntity(null);

        }
    }

    public List<Paridad> buscarParidades() {
        return Arrays.asList(Paridad.values());
    }

    public List<BitParada> buscarBitParada() {
        return Arrays.asList(BitParada.values());
    }
}
