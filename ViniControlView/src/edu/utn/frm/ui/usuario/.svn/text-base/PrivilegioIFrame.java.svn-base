/*
 * PrivilegioIFrame.java
 *
 * Created on 04/08/2009, 17:09:11
 */
package edu.utn.frm.ui.usuario;

import edu.utn.frm.action.exception.ReporteException;
import edu.utn.frm.action.usuario.PrivilegioAbm;
import edu.utn.frm.dao.generic.ValidateException;
import edu.utn.frm.entities.usuario.Privilegio;
import edu.utn.frm.entities.usuario.TipoPrivilegio;
import edu.utn.frm.ui.IconManager;
import edu.utn.frm.ui.utils.GenericComboBoxModel;
import javax.swing.JOptionPane;


import edu.utn.frm.ui.utils.GenericTableModel;
import java.util.Arrays;
import java.util.List;

/**
 *
 * @author Proyecto
 */
public class PrivilegioIFrame extends javax.swing.JInternalFrame {

    private PrivilegioAbm gestorAbm = new PrivilegioAbm();
    private GenericTableModel<Privilegio> model = new GenericTableModel<Privilegio>(
            new String[]{"Descripción", "Tipo Privilegio"},
            new String[]{"descripcion", "tipoPrivilegio.descripcion"});
    private GenericComboBoxModel<TipoPrivilegio> modelTipoPrivilegio =
            new GenericComboBoxModel(buscarTodosTiposPrivilegio(), "descripcion");
    private GenericComboBoxModel<TipoPrivilegio> modelBuscarTipoPrivilegio =
            new GenericComboBoxModel(buscarTodosTiposPrivilegio(), "descripcion",true);

    /** Creates new form PrivilegioIFrame */
    public PrivilegioIFrame() {
        initComponents();
        habilitarPanelDatos(false);
        model.setRows(gestorAbm.buscar());
        tipoPrivilegioComboBox.setModel(modelTipoPrivilegio);
        buscarTipoPrivilegioComboBox.setModel(modelBuscarTipoPrivilegio);
        this.setFrameIcon(IconManager.getInstance().getFrameIcon());
        //sPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(" Giros Comerciales [" + model.getRowCount() + "] "));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        datosPanel = new javax.swing.JPanel();
        guardarButton = new javax.swing.JButton();
        eliminarButton = new javax.swing.JButton();
        cancelarButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        descripcionText = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        nuevoButton = new javax.swing.JButton();
        limpiarDatosEntityButton = new javax.swing.JButton();
        tipoPrivilegioComboBox = new javax.swing.JComboBox();
        sPanel = new javax.swing.JScrollPane();
        buscarTabla = new javax.swing.JTable();
        salirButton = new javax.swing.JButton();
        buscarDescripcionText = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        buscarButton = new javax.swing.JButton();
        limpiarBuscadorButton = new javax.swing.JButton();
        buscarTipoPrivilegioComboBox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        generarInformeButton1 = new javax.swing.JButton();

        setIconifiable(true);
        setTitle("Privilegio");

        datosPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos Privilegio"));
        datosPanel.setName("datosPanel"); // NOI18N

        guardarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/guardar.png"))); // NOI18N
        guardarButton.setText("Guardar");
        guardarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        guardarButton.setName("guardarButton"); // NOI18N
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar(evt);
            }
        });

        eliminarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/eliminar.png"))); // NOI18N
        eliminarButton.setText("Eliminar");
        eliminarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        eliminarButton.setName("eliminarButton"); // NOI18N
        eliminarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar(evt);
            }
        });

        cancelarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/cerrar.png"))); // NOI18N
        cancelarButton.setText("Cancelar");
        cancelarButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        cancelarButton.setName("cancelarButton"); // NOI18N
        cancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelar(evt);
            }
        });

        jLabel2.setFont(jLabel2.getFont().deriveFont(jLabel2.getFont().getStyle() & ~java.awt.Font.BOLD));
        jLabel2.setText("Descripción:");
        jLabel2.setName("jLabel2"); // NOI18N

        descripcionText.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        descripcionText.setName("txtTNombre"); // NOI18N

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${entity.codigo}"), descripcionText, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        jLabel6.setText("Tipo Privilegio:");
        jLabel6.setName("jLabel6"); // NOI18N

        nuevoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/agregar.png"))); // NOI18N
        nuevoButton.setText("Nuevo");
        nuevoButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        nuevoButton.setName("nuevoButton"); // NOI18N
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevo(evt);
            }
        });

        limpiarDatosEntityButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/limpiar.png"))); // NOI18N
        limpiarDatosEntityButton.setText("Limpiar");
        limpiarDatosEntityButton.setName("limpiarDatosEntityButton"); // NOI18N
        limpiarDatosEntityButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarDatosEntityButtonActionPerformed(evt);
            }
        });

        tipoPrivilegioComboBox.setModel(modelTipoPrivilegio);
        tipoPrivilegioComboBox.setName("tipoPrivilegioComboBox"); // NOI18N

        javax.swing.GroupLayout datosPanelLayout = new javax.swing.GroupLayout(datosPanel);
        datosPanel.setLayout(datosPanelLayout);
        datosPanelLayout.setHorizontalGroup(
            datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosPanelLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(4, 4, 4)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tipoPrivilegioComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(descripcionText, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addComponent(limpiarDatosEntityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
            .addGroup(datosPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(nuevoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(eliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );
        datosPanelLayout.setVerticalGroup(
            datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(datosPanelLayout.createSequentialGroup()
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(descripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(limpiarDatosEntityButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tipoPrivilegioComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(datosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eliminarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nuevoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        sPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Privilegios"));
        sPanel.setName("sPanel"); // NOI18N

        buscarTabla.setAutoCreateRowSorter(true);
        buscarTabla.setModel(model);
        buscarTabla.setName("buscarTable"); // NOI18N
        buscarTabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buscarTablaMouseClicked(evt);
            }
        });
        sPanel.setViewportView(buscarTabla);

        salirButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/cerrar.png"))); // NOI18N
        salirButton.setText("Cerrar");
        salirButton.setName("salirButton"); // NOI18N
        salirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirButtonActionPerformed(evt);
            }
        });

        buscarDescripcionText.setName("buscarDescripcionText"); // NOI18N

        jLabel1.setText("Descripción");
        jLabel1.setName("jLabel1"); // NOI18N

        buscarButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/buscar.png"))); // NOI18N
        buscarButton.setText("Buscar");
        buscarButton.setName("buscarButton"); // NOI18N
        buscarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarButtonActionPerformed(evt);
            }
        });

        limpiarBuscadorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/limpiar.png"))); // NOI18N
        limpiarBuscadorButton.setText("Limpiar");
        limpiarBuscadorButton.setName("limpiarBuscarButton"); // NOI18N
        limpiarBuscadorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarBuscadorButtonActionPerformed(evt);
            }
        });

        buscarTipoPrivilegioComboBox.setModel(modelTipoPrivilegio);
        buscarTipoPrivilegioComboBox.setName("buscarTipoPrivilegioComboBox"); // NOI18N

        jLabel3.setText("Tipo Privilegio");
        jLabel3.setName("jLabel3"); // NOI18N

        generarInformeButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/edu/utn/frm/ui/resources/image/informe.png"))); // NOI18N
        generarInformeButton1.setText("Generar Informe");
        generarInformeButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        generarInformeButton1.setName("generarInformeButton1"); // NOI18N
        generarInformeButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarInformeButton1(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                    .addComponent(datosPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(buscarDescripcionText, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buscarTipoPrivilegioComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buscarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(limpiarBuscadorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(generarInformeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 301, Short.MAX_VALUE)
                        .addComponent(salirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buscarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(limpiarBuscadorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buscarDescripcionText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscarTipoPrivilegioComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(datosPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(salirButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generarInformeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        sPanel.getAccessibleContext().setAccessibleName("Giro Comercial");

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nuevo(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevo
        nuevo();
    }//GEN-LAST:event_nuevo

    private void buscarTablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buscarTablaMouseClicked
        if (evt.getClickCount() > 1) {
            editar();
        }
}//GEN-LAST:event_buscarTablaMouseClicked

    private void salirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirButtonActionPerformed
        System.gc();//recolecta la basura
        reset();
        this.setVisible(false);
}//GEN-LAST:event_salirButtonActionPerformed

    private void guardar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar
        guardar();
    }//GEN-LAST:event_guardar

    private void eliminar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar
        eliminar();
    }//GEN-LAST:event_eliminar

    private void cancelar(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelar
        reset();
    }//GEN-LAST:event_cancelar

    private void buscarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarButtonActionPerformed
        gestorAbm.getFilter().setDescripcion(buscarDescripcionText.getText());
        gestorAbm.getFilter().setTipoPrivilegio(modelBuscarTipoPrivilegio.getSelectedEntity());
        model.setRows(gestorAbm.buscar());
    }//GEN-LAST:event_buscarButtonActionPerformed

    private void limpiarBuscadorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarBuscadorButtonActionPerformed
        buscarDescripcionText.setText("");
        modelBuscarTipoPrivilegio.setSelectedEntity(null);
        gestorAbm.getFilter().clear();
    }//GEN-LAST:event_limpiarBuscadorButtonActionPerformed

    private void limpiarDatosEntityButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarDatosEntityButtonActionPerformed
        descripcionText.setText("");
        modelTipoPrivilegio.setSelectedEntity(null);
    }//GEN-LAST:event_limpiarDatosEntityButtonActionPerformed

    private void generarInformeButton1(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarInformeButton1
        try {
            gestorAbm.ejecutarReporte();
        } catch (ReporteException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(),"Error al generar el reporte",JOptionPane.ERROR_MESSAGE);
        }
}//GEN-LAST:event_generarInformeButton1

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscarButton;
    private javax.swing.JTextField buscarDescripcionText;
    private javax.swing.JTable buscarTabla;
    private javax.swing.JComboBox buscarTipoPrivilegioComboBox;
    private javax.swing.JButton cancelarButton;
    private javax.swing.JPanel datosPanel;
    private javax.swing.JTextField descripcionText;
    private javax.swing.JButton eliminarButton;
    private javax.swing.JButton generarInformeButton1;
    private javax.swing.JButton guardarButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JButton limpiarBuscadorButton;
    private javax.swing.JButton limpiarDatosEntityButton;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JScrollPane sPanel;
    private javax.swing.JButton salirButton;
    private javax.swing.JComboBox tipoPrivilegioComboBox;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void nuevo() {
        gestorAbm.nuevo();
        habilitarPanelDatos(true);
        eliminarButton.setEnabled(false);
        nuevoButton.setEnabled(false);
        limpiarDatosEntityButton.setEnabled(true);
        bindinDataEntity(servidor);
    }

    private void editar() {
        Privilegio privilegio = null;

        if (buscarTabla.getSelectedRow() != -1) {
            privilegio = model.getRow(buscarTabla.getSelectedRow());
            if (privilegio != null) {
                gestorAbm.setEntity(privilegio);
                bindinDataEntity(servidor);
                habilitarPanelDatos(true);
            }
        }
        if (privilegio == null) {
            JOptionPane.showInternalMessageDialog(this, "Debe seleccionar un Privilegio para editar");
        }
    }

    private void guardar() {

        bindinDataEntity(cliente);
        try {
            gestorAbm.valid();
            gestorAbm.guardar();
            reset();
        } catch (ValidateException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void eliminar() {
        Privilegio privilegio = null;

        try {
            if (buscarTabla.getSelectedRow() != -1) {
                privilegio = model.getRow(buscarTabla.getSelectedRow());
                if (privilegio != null) {

                    int respuesta = JOptionPane.showConfirmDialog(this, "Está seguro que desea eliminar el Privilegio seleccionado?",
                            "Confirmar Eliminación", JOptionPane.OK_CANCEL_OPTION);

                    if (respuesta == JOptionPane.OK_OPTION) {
                        gestorAbm.setEntity(privilegio);
                        gestorAbm.eliminar();
                        reset();
                    }

                }
            }
            if (privilegio == null) {
                JOptionPane.showInternalMessageDialog(this, "Debe seleccionar un Privilegio para eliminar");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }

    private void reset() {
        descripcionText.setText("");
        tipoPrivilegioComboBox.setSelectedItem(null);
        setEntity(null);
        habilitarPanelDatos(false);
        model.setRows(gestorAbm.buscar());
    }

    public PrivilegioAbm getGestorAbm() {
        return gestorAbm;
    }

    public void setGestorAbm(PrivilegioAbm gestorAbm) {
        this.gestorAbm = gestorAbm;
    }

    public Privilegio getEntity() {
        return gestorAbm.getEntity();
    }

    public void setEntity(Privilegio entity) {
        this.gestorAbm.setEntity(entity);
    }

    private void habilitarPanelDatos(boolean habilitar) {
        descripcionText.setEnabled(habilitar);
        tipoPrivilegioComboBox.setEnabled(habilitar);
        guardarButton.setEnabled(habilitar);
        eliminarButton.setEnabled(habilitar);
        cancelarButton.setEnabled(habilitar);
        limpiarDatosEntityButton.setEnabled(habilitar);
        nuevoButton.setEnabled(true);
    }
    private final int cliente = 0;
    private final int servidor = 1;

    public void bindinDataEntity(int fuente) {
        if (fuente == servidor) {
            descripcionText.setText(getEntity().getDescripcion());
            modelTipoPrivilegio.setSelectedEntity(getEntity().getTipoPrivilegio());
        } else if (fuente == cliente) {
            getEntity().setDescripcion(descripcionText.getText());
            getEntity().setTipoPrivilegio(modelTipoPrivilegio.getSelectedEntity());
        }
    }

    public List<TipoPrivilegio> buscarTodosTiposPrivilegio() {
        return Arrays.asList(TipoPrivilegio.values());
    }
}